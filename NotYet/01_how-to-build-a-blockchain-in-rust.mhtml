From: <Saved by Blink>
Snapshot-Content-Location: data:text/html, <html contenteditable>
Subject: 
Date: Thu, 14 Jul 2022 22:14:27 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--fIudxcqF42MSSJ7wXns7rvf0TX5nXHFsNF0GQEIUve----"


------MultipartBoundary--fIudxcqF42MSSJ7wXns7rvf0TX5nXHFsNF0GQEIUve----
Content-Type: text/html
Content-ID: <frame-350204DEFC63B15BB36DDA453C2949F0@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: data:text/html, <html contenteditable>

<html contenteditable=3D""><head><meta http-equiv=3D"Content-Type" content=
=3D"text/html; charset=3Dwindows-1252"></head><body><div><br></div><div><br=
></div><div><header class=3D"navbar-light bg-white fixed-top mediumnavigati=
on nav-down" style=3D"box-sizing: inherit; height: auto; position: fixed; t=
op: 0px; right: 0px; left: 0px; z-index: 1030; background: rgb(255, 255, 25=
5); box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 2px -2px; padding: 0px 0px 8px;=
 transition: top 0.2s ease-in-out 0s; color: rgb(118, 74, 188); font-family=
: &quot;PT Sans&quot;; font-size: 15px;"><div class=3D"code-block code-bloc=
k-23" style=3D"box-sizing: inherit; margin: 8px 0px; clear: both;"><a href=
=3D"https://lp.logrocket.com/subscribe-thereplay" target=3D"_blank" style=
=3D"box-sizing: inherit; background-color: transparent; color: rgb(118, 74,=
 188); text-decoration-line: none; touch-action: manipulation;"><div class=
=3D"metrics-banner" style=3D"box-sizing: inherit; padding: 8px 0px; backgro=
und: rgb(118, 74, 188); color: rgb(255, 255, 255);"><div id=3D"metrics-embe=
d" style=3D"box-sizing: inherit; width: 690.359px; margin: 0px auto;"><h6 s=
tyle=3D"box-sizing: inherit; line-height: 1.1; font-size: 1rem; text-align:=
 center; margin: 0px !important;">Can't get enough?&nbsp;<span style=3D"box=
-sizing: inherit; text-decoration-line: underline;">Subscribe to The Replay=
</span>, our weekly newsletter &#8594;</h6></div></div></a></div><div class=
=3D"container" style=3D"box-sizing: inherit; position: relative; margin-lef=
t: auto; margin-right: auto; padding-right: 15px; padding-left: 15px; width=
: 960px; max-width: 100%;"><div class=3D"nav-left" style=3D"box-sizing: inh=
erit; width: 558px; float: left; padding-top: 0px;"><a class=3D"blog-logo" =
href=3D"https://blog.logrocket.com/" rel=3D"home" style=3D"box-sizing: inhe=
rit; background-color: transparent; color: rgb(118, 74, 188); text-decorati=
on-line: none; touch-action: manipulation; float: left;"><img src=3D"https:=
//blog.logrocket.com/wp-content/uploads/2020/01/logrocket-blog-logo.png" al=
t=3D"LogRocket Blog" style=3D"box-sizing: inherit; border-style: none; vert=
ical-align: middle; max-width: 100%; height: auto; width: 150px; float: lef=
t;"></a><div class=3D"col-lg-4 col-md-4 mr-auto col-xs-12 text-right search=
area" style=3D"box-sizing: inherit; position: relative; width: 186px; min-h=
eight: 1px; padding-right: 15px; padding-left: 15px; -webkit-box-flex: 0; f=
lex: 0 0 33.3333%; max-width: 33.3333%; margin-right: auto !important; text=
-align: right !important;"></div><div class=3D"navarea" style=3D"box-sizing=
: inherit; width: 558px;"><nav class=3D"navbar navbar-toggleable-sm" style=
=3D"box-sizing: inherit; display: flex; position: relative; -webkit-box-ori=
ent: horizontal; -webkit-box-direction: normal; flex-flow: row nowrap; padd=
ing: 0.2rem 1rem; -webkit-box-align: center; align-items: center; width: 27=
9px; float: left; list-style: none;"><div id=3D"bs4navbar" class=3D"collaps=
e navbar-collapse" style=3D"box-sizing: inherit; display: flex !important; =
width: 247px;"><ul id=3D"menu-primary" class=3D"navbar-nav col-md-12 justif=
y-content-center" style=3D"box-sizing: border-box; margin-top: 0px; margin-=
bottom: 0px; position: relative; width: 247px; min-height: 1px; padding-rig=
ht: 15px; padding-left: 10px; -webkit-box-flex: 0; flex: 0 0 100%; max-widt=
h: 100%; display: flex; -webkit-box-orient: horizontal; -webkit-box-directi=
on: normal; flex-direction: row; list-style: none; -webkit-box-pack: center=
 !important; justify-content: center !important; padding-top: 5px;"><li id=
=3D"menu-item-6" class=3D"menu-item menu-item-type-custom menu-item-object-=
custom menu-item-has-children menu-item-6 nav-item dropdown" style=3D"box-s=
izing: inherit; position: relative; display: inline-block; list-style: none=
; font-size: 0.84rem; text-transform: uppercase;"><a href=3D"https://blog.l=
ogrocket.com/how-to-build-a-blockchain-in-rust/#" class=3D"nav-link dropdow=
n-toggle" style=3D"box-sizing: inherit; background-color: transparent; colo=
r: rgb(118, 74, 188); text-decoration-line: none; touch-action: manipulatio=
n; display: block; padding-right: 1rem; padding-left: 1rem; float: left; le=
tter-spacing: 0.8px; padding-top: 0px !important; padding-bottom: 0px !impo=
rtant; font-size: 0.84rem !important;">BLOG</a></li><li id=3D"menu-item-324=
92" class=3D"menu-item menu-item-type-custom menu-item-object-custom menu-i=
tem-32492 nav-item" style=3D"box-sizing: inherit; display: inline-block; li=
st-style: none; font-size: 0.84rem; text-transform: uppercase;"><a href=3D"=
https://podrocket.logrocket.com/" class=3D"nav-link" style=3D"box-sizing: i=
nherit; background-color: transparent; color: rgb(118, 74, 188); text-decor=
ation-line: none; touch-action: manipulation; display: block; padding-right=
: 1rem; padding-left: 1rem; float: left; letter-spacing: 0.8px; padding-top=
: 0px !important; padding-bottom: 0px !important; font-size: 0.84rem !impor=
tant;">PODCAST</a></li><li id=3D"menu-item-72923" class=3D"menu-item menu-i=
tem-type-post_type menu-item-object-page menu-item-72923 nav-item" style=3D=
"box-sizing: inherit; display: inline-block; list-style: none; font-size: 0=
.84rem; text-transform: uppercase;"><a href=3D"https://blog.logrocket.com/t=
ech-meetups/" class=3D"nav-link" style=3D"box-sizing: inherit; background-c=
olor: transparent; color: rgb(118, 74, 188); text-decoration-line: none; to=
uch-action: manipulation; display: block; padding-right: 1rem; padding-left=
: 1rem; float: left; letter-spacing: 0.8px; padding-top: 0px !important; pa=
dding-bottom: 0px !important; font-size: 0.84rem !important;">MEETUPS</a></=
li></ul></div></nav></div></div><div class=3D"nav-right" style=3D"box-sizin=
g: inherit; width: 372px; float: left;"><div class=3D"menu-container" style=
=3D"box-sizing: inherit;"><div id=3D"right-hand-nav" class=3D"menu-right-ha=
nd-menu-container" style=3D"box-sizing: inherit;"><ul id=3D"menu-right-hand=
-menu" class=3D"" style=3D"box-sizing: border-box; margin: 0px !important;"=
><li id=3D"menu-item-877" class=3D"menu-item menu-item-type-custom menu-ite=
m-object-custom menu-item-877" style=3D"box-sizing: inherit; text-align: ce=
nter; width: 66.3906px; float: right; list-style: none; font-size: 0.84rem;=
 text-transform: uppercase; padding: 10px;"><a href=3D"https://app.logrocke=
t.com/" style=3D"box-sizing: inherit; background-color: transparent; color:=
 rgb(118, 74, 188); text-decoration-line: none; touch-action: manipulation;=
">SIGN IN</a></li><li id=3D"menu-item-878" class=3D"menu-item menu-item-typ=
e-custom menu-item-object-custom menu-item-878" style=3D"box-sizing: inheri=
t; text-align: center; width: auto !important; float: right; list-style: no=
ne; font-size: 0.84rem; text-transform: uppercase; padding: 11px 10px; back=
ground: rgb(118, 74, 188); line-height: 1.2;"><a href=3D"https://logrocket.=
com/signup/" style=3D"box-sizing: inherit; background-color: transparent; c=
olor: rgb(255, 255, 255); text-decoration-line: none; touch-action: manipul=
ation;">START MONITORING FOR FREE</a></li></ul></div></div></div></div></he=
ader><div class=3D"site-content" style=3D"box-sizing: inherit; min-height: =
60vh; padding-top: 43px; margin-top: 96.75px; transition: all 0.4s ease 0s;=
 color: rgb(102, 102, 102); font-family: &quot;PT Sans&quot;; font-size: 15=
px;"><article class=3D"article-post" style=3D"box-sizing: inherit; font-fam=
ily: Merriweather; font-size: 1.125rem; line-height: 1.8; color: rgb(34, 34=
, 34);"><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2r=
em;">When we think about P2P technology and what it=92s used for nowadays, =
it=92s impossible not to immediately think of blockchain technology. Few to=
pics in IT have been as hyped or as controversial over the last decade as b=
lockchain tech and cryptocurrency.</p><p style=3D"box-sizing: inherit; marg=
in-top: 0px; margin-bottom: 2rem;">And while the broad interest in blockcha=
in technology has varied quite a bit =97 which is, naturally, due to the mo=
netary potential behind some of the more widely known and used cryptocurren=
cies =97 one thing is clear: it=92s still relevant and it doesn=92t seem to=
 be going anywhere.</p><p style=3D"box-sizing: inherit; margin-top: 0px; ma=
rgin-bottom: 2rem;">In a&nbsp;<a href=3D"https://blog.logrocket.com/libp2p-=
tutorial-build-a-peer-to-peer-app-in-rust/" target=3D"_blank" rel=3D"noopen=
er" style=3D"box-sizing: inherit; color: rgb(118, 74, 188); text-decoration=
-line: none; touch-action: manipulation;">previous article</a>, we covered =
how to build a very basic, working (albeit rather inefficient) peer-to-peer=
 application in Rust. In this tutorial, we=92ll demonstrate&nbsp;how to bui=
ld a blockchain application with a basic mining scheme, consensus, and peer=
-to-peer networking in just 500 lines of Rust.</p><p style=3D"box-sizing: i=
nherit; margin-top: 0px; margin-bottom: 2rem;">We=92ll cover the following =
in detail:</p><ul style=3D"box-sizing: border-box; margin-top: 0px; margin-=
bottom: 1rem;"><li style=3D"box-sizing: inherit;"><a href=3D"https://blog.l=
ogrocket.com/how-to-build-a-blockchain-in-rust/#why-blockchain-is-exciting"=
 style=3D"box-sizing: inherit; color: rgb(118, 74, 188); text-decoration-li=
ne: none; touch-action: manipulation;">Why blockchain is exciting</a></li><=
li style=3D"box-sizing: inherit;"><a href=3D"https://blog.logrocket.com/how=
-to-build-a-blockchain-in-rust/#writing-a-blockchain-app-in-rust" style=3D"=
box-sizing: inherit; color: rgb(118, 74, 188); text-decoration-line: none; =
touch-action: manipulation;">Writing a blockchain app in Rust</a></li><li s=
tyle=3D"box-sizing: inherit;"><a href=3D"https://blog.logrocket.com/how-to-=
build-a-blockchain-in-rust/#setting-up-our-rust-app" style=3D"box-sizing: i=
nherit; color: rgb(118, 74, 188); text-decoration-line: none; touch-action:=
 manipulation;">Setting up our Rust app</a></li><li style=3D"box-sizing: in=
herit;"><a href=3D"https://blog.logrocket.com/how-to-build-a-blockchain-in-=
rust/#blockchain-basics" style=3D"box-sizing: inherit; color: rgb(118, 74, =
188); text-decoration-line: none; touch-action: manipulation;">Blockchain b=
asics</a></li><li style=3D"box-sizing: inherit;"><a href=3D"https://blog.lo=
grocket.com/how-to-build-a-blockchain-in-rust/#blocks-blocks-blocks" style=
=3D"box-sizing: inherit; color: rgb(118, 74, 188); text-decoration-line: no=
ne; touch-action: manipulation;">Blocks, blocks, blocks</a></li><li style=
=3D"box-sizing: inherit;"><a href=3D"https://blog.logrocket.com/how-to-buil=
d-a-blockchain-in-rust/#which-chain-to-use" style=3D"box-sizing: inherit; c=
olor: rgb(118, 74, 188); text-decoration-line: none; touch-action: manipula=
tion;">Which chain to use?</a></li><li style=3D"box-sizing: inherit;"><a hr=
ef=3D"https://blog.logrocket.com/how-to-build-a-blockchain-in-rust/#mining"=
 style=3D"box-sizing: inherit; color: rgb(118, 74, 188); text-decoration-li=
ne: none; touch-action: manipulation;">Mining</a></li><li style=3D"box-sizi=
ng: inherit;"><a href=3D"https://blog.logrocket.com/how-to-build-a-blockcha=
in-in-rust/#peer-to-peer-basics" style=3D"box-sizing: inherit; color: rgb(1=
18, 74, 188); text-decoration-line: none; touch-action: manipulation;">Peer=
-to-peer basics</a></li><li style=3D"box-sizing: inherit;"><a href=3D"https=
://blog.logrocket.com/how-to-build-a-blockchain-in-rust/#handling-incoming-=
messages" style=3D"box-sizing: inherit; color: rgb(118, 74, 188); text-deco=
ration-line: none; touch-action: manipulation;">Handling incoming messages<=
/a></li><li style=3D"box-sizing: inherit;"><a href=3D"https://blog.logrocke=
t.com/how-to-build-a-blockchain-in-rust/#putting-it-all-together" style=3D"=
box-sizing: inherit; color: rgb(118, 74, 188); text-decoration-line: none; =
touch-action: manipulation;">Putting it all together</a></li><li style=3D"b=
ox-sizing: inherit;"><a href=3D"https://blog.logrocket.com/how-to-build-a-b=
lockchain-in-rust/#testing-our-rust-blockchain" style=3D"box-sizing: inheri=
t; color: rgb(118, 74, 188); text-decoration-line: none; touch-action: mani=
pulation;">Testing our Rust blockchain</a></li></ul><h2 id=3D"why-blockchai=
n-is-exciting" style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom=
: 1.5rem; font-family: &quot;PT Sans&quot;; line-height: 1.1; color: rgb(17=
, 17, 17); font-size: 2rem;">Why blockchain is exciting</h2><p style=3D"box=
-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">While I=92m person=
ally not particularly interested in cryptocurrencies or financial gambling =
in general, I find the idea of decentralizing parts of our existing infrast=
ructure very appealing. There are many great blockchain-based projects out =
there that aim to tackle societal problems such as climate change, social i=
nequality, privacy and governmental transparency.</p><p style=3D"box-sizing=
: inherit; margin-top: 0px; margin-bottom: 2rem;">The potential behind tech=
nology built on the idea of a secure, fully transparent, decentralized ledg=
er that enables actors to interact without having to establish trust first =
is as game-changing as it seems. It will be exciting to see which of the af=
orementioned ambitious ideas will get off the ground, gain traction, and su=
cceed going forward.</p><p style=3D"box-sizing: inherit; margin-top: 0px; m=
argin-bottom: 2rem;">In short, blockchain technology is exciting, not only =
for its world-changing potential, but also from a technical perspective. Fr=
om cryptography over peer-to-peer networking to fancy&nbsp;<a href=3D"https=
://blog.logrocket.com/guide-blockchain-consensus-protocols/" target=3D"_bla=
nk" rel=3D"noopener" style=3D"box-sizing: inherit; color: rgb(118, 74, 188)=
; text-decoration-line: none; touch-action: manipulation;">consensus algori=
thms</a>, the field has quite a few fascinating topics to dive into.</p><h2=
 id=3D"writing-a-blockchain-app-in-rust" style=3D"box-sizing: inherit; marg=
in-top: 0px; margin-bottom: 1.5rem; font-family: &quot;PT Sans&quot;; line-=
height: 1.1; color: rgb(17, 17, 17); font-size: 2rem;">Writing a blockchain=
 app in Rust</h2><p style=3D"box-sizing: inherit; margin-top: 0px; margin-b=
ottom: 2rem;">In this guide, we=92ll build a very simple blockchain applica=
tion from scratch using Rust. Our app will not be particularly efficient, s=
ecure, or robust, but it will help you understand how some of the fundament=
al concepts behind widely known blockchain systems can be implemented in a =
simple way, explaining some of the ideas behind them.</p><p style=3D"box-si=
zing: inherit; margin-top: 0px; margin-bottom: 2rem;">We won=92t go into ev=
ery detail on every concept, and the implementation will have some serious =
shortcomings. You wouldn=92t want to use this project for anything within m=
iles of a production use case, but the goal is to build something you can p=
lay around with, apply to your own ideas, and examine to get more familiar =
with both Rust and blockchain tech in general.</p><p style=3D"box-sizing: i=
nherit; margin-top: 0px; margin-bottom: 2rem;">The focus will be on the tec=
hnical part =97 i.e., how to implement some of the concepts and how they pl=
ay together. We won=92t explain what a blockchain is, nor will we touch on =
mining, consensus, and the like beyond what=92s necessary for this tutorial=
. We will mostly be concerned with how to put these ideas, in a simplified =
version, into Rust code.</p><div class=3D"code-block code-block-28" style=
=3D"box-sizing: inherit; margin: 8px 0px; clear: both;"><a target=3D"_blank=
" id=3D"blog-personalized-demo-link" href=3D"https://blog.logrocket.com/how=
-to-build-a-blockchain-in-rust/" style=3D"box-sizing: inherit; color: rgb(1=
18, 74, 188); text-decoration-line: none; touch-action: manipulation;"></a>=
</div><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem=
;">Also, we won=92t build a cryptocurrency or similar system. Our design is=
 much simpler: every node in the network can add data (strings) to the dece=
ntralized ledger (the blockchain) by mining a valid block locally and then =
broadcasting that block.</p><p style=3D"box-sizing: inherit; margin-top: 0p=
x; margin-bottom: 2rem;">As long as it=92s a valid block (we=92ll see later=
 on what this means), each node will add the block to its chain and our pie=
ce of data become part of a decentralized, tamper-proof, indestructible (ex=
cept that all notes shutdown in our case) network!</p><p style=3D"box-sizin=
g: inherit; margin-top: 0px; margin-bottom: 2rem;">This is obviously a quit=
e simplified and somewhat contrived design that would run into efficiency a=
nd robustness issues rather quickly when scaling up. But since we=92re just=
 doing this exercise to learn, that=92s totally fine. If you make it to the=
 end and have some motivation, you can extend it in any direction you want =
and maybe build the next big thing from our paltry beginnings here =97 you =
never know!</p><h2 id=3D"setting-up-our-rust-app" style=3D"box-sizing: inhe=
rit; margin-top: 0px; margin-bottom: 1.5rem; font-family: &quot;PT Sans&quo=
t;; line-height: 1.1; color: rgb(17, 17, 17); font-size: 2rem;">Setting up =
our Rust app</h2><p style=3D"box-sizing: inherit; margin-top: 0px; margin-b=
ottom: 2rem;">To follow along, all you need is a&nbsp;<a href=3D"https://ww=
w.rust-lang.org/tools/install" target=3D"_blank" rel=3D"noopener" style=3D"=
box-sizing: inherit; color: rgb(118, 74, 188); text-decoration-line: none; =
touch-action: manipulation;">recent Rust installation</a>.</p><p style=3D"b=
ox-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">First, create a =
new Rust project:</p><pre class=3D"language-rust hljs prettyprinted" style=
=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Libera=
tion Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; mar=
gin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); =
max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !importan=
t;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>cargo </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 136);">new</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> rust</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">-</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">blockchain</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">-</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">example
cd rust</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">-</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">blockchain</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">-</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">example</span></pre><p style=3D"=
box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Next, edit the&=
nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-fami=
ly: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New=
&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(18=
9, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;">=
<span class=3D"typ" style=3D"box-sizing: inherit;">Cargo</span><span class=
=3D"pun" style=3D"box-sizing: inherit;">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit;">toml</span></code>&nbsp;file and add the dependen=
cies you=92ll need.</p><pre class=3D"language-rust hljs prettyprinted" styl=
e=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liber=
ation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; ma=
rgin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76);=
 max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !importa=
nt;"><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">[</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">dependencies</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">]</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);">
chrono </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: inhe=
rit; color: rgb(0, 136, 0);">"0.4"</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
sha2 </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: inheri=
t; color: rgb(0, 136, 0);">"0.9.8"</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
serde </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">version </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span cla=
ss=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"1.0"</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);"> features </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">[</span><span class=3D"str" style=
=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"derive"</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">]</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">
serde_json </span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: =
inherit; color: rgb(0, 136, 0);">"1.0"</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">
libp2p </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> version </span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"0.39"<=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> features </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">[</span><span class=3D"str" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"tcp-tokio"</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 1=
36, 0);">"mdns"</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">]</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">
tokio </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> version </span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"1.0"</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> features </span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">[</span><span class=3D"str" st=
yle=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"io-util"</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> =
</span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136,=
 0);">"io-std"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing:=
 inherit; color: rgb(0, 136, 0);">"macros"</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"rt"</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);"> </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0=
, 136, 0);">"rt-multi-thread"</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=
=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"sync"</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);=
">"time"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">]</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
hex </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: inherit=
; color: rgb(0, 136, 0);">"0.4"</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
once_cell </span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"1.5"</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">
log </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: inherit=
; color: rgb(0, 136, 0);">"0.4"</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
pretty_env_logger </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-s=
izing: inherit; color: rgb(0, 136, 0);">"0.4"</span></pre><p style=3D"box-s=
izing: inherit; margin-top: 0px; margin-bottom: 2rem;">We=92re using&nbsp;<=
a href=3D"https://github.com/libp2p/rust-libp2p" target=3D"_blank" rel=3D"n=
oopener" style=3D"box-sizing: inherit; color: rgb(118, 74, 188); text-decor=
ation-line: none; touch-action: manipulation;">libp2p</a>&nbsp;as our peer-=
to-peer networking layer and&nbsp;<a href=3D"https://github.com/tokio-rs/to=
kio" target=3D"_blank" rel=3D"noopener" style=3D"box-sizing: inherit; color=
: rgb(118, 74, 188); text-decoration-line: none; touch-action: manipulation=
;">Tokio</a>&nbsp;as our underlying runtime.</p><p style=3D"box-sizing: inh=
erit; margin-top: 0px; margin-bottom: 2rem;">We=92ll use the&nbsp;<code cla=
ss=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Mon=
aco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monosp=
ace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); ba=
ckground-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D=
"pln" style=3D"box-sizing: inherit;">sha2</span></code>&nbsp;library for ou=
r sha256 hashing and the&nbsp;<code class=3D" prettyprinted" style=3D"box-s=
izing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono=
&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2=
rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); =
border-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;"=
>hex</span></code>&nbsp;crate to transform the binary hashes into readable =
and transferable hex.</p><p style=3D"box-sizing: inherit; margin-top: 0px; =
margin-bottom: 2rem;">Besides that, there=92s really only utilities such as=
&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-fam=
ily: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier Ne=
w&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(1=
89, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"=
><span class=3D"pln" style=3D"box-sizing: inherit;">serde</span></code>&nbs=
p;for JSON,&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inheri=
t; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot=
;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; c=
olor: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius=
: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">log</span></=
code>, and&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit=
; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;=
Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; co=
lor: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius:=
 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">pretty_env_lo=
gger</span></code>&nbsp;for logging,&nbsp;<code class=3D" prettyprinted" st=
yle=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Lib=
eration Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; =
padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247,=
 247, 249); border-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizin=
g: inherit;">once_cell</span></code>&nbsp;for static initialization, and&nb=
sp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family=
: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&q=
uot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189,=
 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><s=
pan class=3D"pln" style=3D"box-sizing: inherit;">chrono</span></code>&nbsp;=
for timestamps.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin=
-bottom: 2rem;">With the setup out of the way, let=92s start by implementin=
g the blockchain basics first and then, later on, putting all of it into a =
P2P-networked context.</p><h2 id=3D"blockchain-basics" style=3D"box-sizing:=
 inherit; margin-top: 0px; margin-bottom: 1.5rem; font-family: &quot;PT San=
s&quot;; line-height: 1.1; color: rgb(17, 17, 17); font-size: 2rem;">Blockc=
hain basics</h2><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bo=
ttom: 2rem;">Let=92s first define our data structures for our actual blockc=
hain:</p><pre class=3D"language-rust hljs prettyprinted" style=3D"box-sizin=
g: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quo=
t;, &quot;Courier New&quot;, monospace; font-size: 16.2px; margin-top: 0px;=
 margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height: 5=
00px; padding: 0.5em; background: rgb(237, 237, 237) !important;"><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">pub </span><=
span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">st=
ruct</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rg=
b(102, 0, 102);">App</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
    pub blocks</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing:=
 inherit; color: rgb(102, 0, 102);">Vec</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

</span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0,=
 0);">#[derive(Serialize, Deserialize, Debug, Clone)]</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">struct</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inheri=
t; color: rgb(102, 0, 102);">Block</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub id</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> u64</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    pub hash</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: i=
nherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub previous_hash</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-=
sizing: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub timestamp</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> i64</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub data</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: i=
nherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub nonce</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> u64</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">That=92s it =97 not much behind it, really. Our&nbsp;<co=
de class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menl=
o, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, =
monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 7=
1); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span cl=
ass=3D"typ" style=3D"box-sizing: inherit;">App</span></code>&nbsp;struct es=
sentially holds our application state. We won=92t persist the blockchain in=
 this example, so it will go away once we stop the application.</p><p style=
=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">This state =
is simply a list of&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing=
: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot=
;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0=
.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); borde=
r-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizing: inherit;">Bloc=
ks</span></code>. We will add new blocks to the end of this list and this w=
ill actually be our blockchain data structure.</p><p style=3D"box-sizing: i=
nherit; margin-top: 0px; margin-bottom: 2rem;">The actual logic will make t=
his list of blocks a chain of blocks, where each block references the previ=
ous block=92s hash will be implemented in our application logic. It would b=
e possible to build a data structure that already supports the validation w=
e need out of the box, but this approach seems simpler and we definitely ai=
m for simplicity here.</p><p style=3D"box-sizing: inherit; margin-top: 0px;=
 margin-bottom: 2rem;">A&nbsp;<code class=3D" prettyprinted" style=3D"box-s=
izing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono=
&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2=
rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); =
border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizing: inherit;"=
>Block</span></code>&nbsp;in our case will consist of an&nbsp;<code class=
=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monac=
o, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospac=
e; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); back=
ground-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"p=
ln" style=3D"box-sizing: inherit;">id</span></code>, which is an index star=
ting at 0 counting up. Then, a sha256 hash (the calculation of which we=92l=
l go into later), the hash of the previous block, a timestamp, the data con=
tained in the block and a nonce, which we will also cover when we talk abou=
t&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-fa=
mily: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier N=
ew&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(=
189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;=
"><span class=3D"pln" style=3D"box-sizing: inherit;">mining</span></code>&n=
bsp;the block.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-=
bottom: 2rem;">Before we get to mining, let=92s first implement some of the=
 validation functions we need to keep our state consistent and some of the =
very basic consensus needed, so each client knows which blockchain is the c=
orrect one, in case there are multiple conflicting ones.</p><p style=3D"box=
-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">We start by implem=
enting our&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit=
; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;=
Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; co=
lor: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius:=
 0.25rem;"><span class=3D"typ" style=3D"box-sizing: inherit;">App</span></c=
ode>&nbsp;struct:</p><pre class=3D"language-rust hljs prettyprinted" style=
=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Libera=
tion Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; mar=
gin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); =
max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !importan=
t;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>impl </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(1=
02, 0, 102);">App</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
    fn </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ"=
 style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Self</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">
        </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Self</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> blocks</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> vec</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">![]</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">

    fn genesis</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> genesis_block </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"t=
yp" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Block</span><sp=
an class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">
            id</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">0</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            timestamp</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-=
sizing: inherit; color: rgb(102, 0, 102);">Utc</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">now</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">().=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">timestamp</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);">
            previous_hash</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span=
 class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">from</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">(</span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(=
0, 136, 0);">"genesis"</span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">),</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);">
            data</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D=
"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">from</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</=
span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0=
);">"genesis!"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">),</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);">
            nonce</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">2836</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            hash</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a64fb40c946=
b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">to_string</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">};</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">push</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">genesis_=
block</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">We initialize our application with an empty chain. Later=
 on, we=92ll implement some logic. We ask other nodes on startup for their =
chain and, if its longer than ours, use theirs. This is our simplistic cons=
ensus criteria.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin=
-bottom: 2rem;">The&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing=
: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot=
;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0=
.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); borde=
r-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">gene=
sis</span></code>&nbsp;method creates the first, hard-coded block in our bl=
ockchain. This is a =93special=94 block in that it doesn=92t really adhere =
to the same rules as the rest of the blocks. For example, it doesn=92t have=
 a valid&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; =
font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Co=
urier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; colo=
r: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0=
.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">previous_hash</=
span></code>, since there simply was no block before it.</p><p style=3D"box=
-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">We need this to =
=93bootstrap=94 our node =97 or, really, the whole network as the first nod=
e starts. The chain has to start somewhere, and this is it.</p><h2 id=3D"bl=
ocks-blocks-blocks" style=3D"box-sizing: inherit; margin-top: 0px; margin-b=
ottom: 1.5rem; font-family: &quot;PT Sans&quot;; line-height: 1.1; color: r=
gb(17, 17, 17); font-size: 2rem;">Blocks, blocks, blocks</h2><p style=3D"bo=
x-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Next, let=92s add=
 some functionality enabling us to add new blocks to the chain.</p><pre cla=
ss=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-=
family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier=
 New&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2=
rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.=
5em; background: rgb(237, 237, 237) !important;"><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">impl </span><span class=3D"t=
yp" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">App</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    fn try_add_block</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> block</s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: =
rgb(102, 0, 102);">Block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> latest_block </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kw=
d" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">b=
locks</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">.</span><span class=3D"kwd" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 136);">last</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">().</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D=
"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"there is at le=
ast one block"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">is_block_valid</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(&amp;</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>block</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> latest_block</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">push</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">bl=
ock</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            error</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: =
inherit; color: rgb(0, 136, 0);">"could not add block - invalid"</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">Here, we fetch the last block in the chain =97 our&nbsp;=
<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: M=
enlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot=
;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65=
, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span=
 class=3D"pln" style=3D"box-sizing: inherit;">previous block</span></code>&=
nbsp;=97 and then validate whether the block we=92d like to add is actually=
 valid. If not, we simply log an error.</p><p style=3D"box-sizing: inherit;=
 margin-top: 0px; margin-bottom: 2rem;">In our simple application, we won=
=92t implement any real error handling. As you=92ll see later, if we run in=
to trouble with race-conditions between nodes and have an invalid state, ou=
r node is basically broken.</p><p style=3D"box-sizing: inherit; margin-top:=
 0px; margin-bottom: 2rem;">I will mention some possible solutions to these=
 problems, but we won=92t implement them here; we have quite a bit of groun=
d to cover even without having to worry about these annoying real-world iss=
ues.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2r=
em;">Let=92s look at&nbsp;<code class=3D" prettyprinted" style=3D"box-sizin=
g: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quo=
t;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem =
0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); bord=
er-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">is_=
block_valid</span></code>&nbsp;next, a core piece of our logic.</p><pre cla=
ss=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-=
family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier=
 New&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2=
rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.=
5em; background: rgb(237, 237, 237) !important;"><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">const</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> DIFFICULTY_PREFI=
X</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">str </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"s=
tr" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"00"</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">;</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

fn hash_to_binary_representation</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">hash</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&a=
mp;[</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">u8</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">])</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">String</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut res</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> <=
/span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, =
102);">String</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 136);">default</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">();</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> c </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">in</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> hash </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        res</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);">push_str</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">format</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!(</span><=
span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"{=
:b}"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> c</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">));</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
    res
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

impl </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(10=
2, 0, 102);">App</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    fn is_block_valid</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"kwd" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> block</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">&amp;</span><span class=3D"typ" style=3D"box-sizing: inherit; co=
lor: rgb(102, 0, 102);">Block</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> previous_block</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">&amp;</span><span class=3D"typ" style=3D"box-sizing: inherit; color: rg=
b(102, 0, 102);">Block</span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D=
"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">bool</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> block</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">previous_hash </span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!=3D</span><sp=
an class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> previ=
ous_block</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">hash </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
            warn</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"block with id: {} has wrong previous hash"=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);"> block</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">hash_to_bina=
ry_representation</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">hex</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">decode</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(&amp;</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">bloc=
k</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">hash</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"can decode from hex"<=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">),</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">starts_with</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">DIFFICULTY_PREFIX</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
            warn</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"block with id: {} has invalid difficulty"<=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> block</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> block</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">id </=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">!=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);"> previous_block</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">id </span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">+</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span cla=
ss=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">1</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">
            warn</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
                </span><span class=3D"str" style=3D"box-sizing: inherit; co=
lor: rgb(0, 136, 0);">"block with id: {} is not the next block after the la=
test: {}"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
                block</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> previous_block</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">id
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hex</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">encode</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">calculate_hash</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
            block</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            block</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">timestamp</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">block</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">previous_hash</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">block</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">data</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            block</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">nonce</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">))</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">!=3D</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);"> block</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">hash
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
            warn</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"block with id: {} has invalid hash"</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);"> block</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">true</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">We first define a constant&nbsp;<code class=3D" prettypr=
inted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, =
&quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size:=
 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color:=
 rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"pln" style=3D"=
box-sizing: inherit;">DIFFICULTY_PREFIX</span></code>. This is the basis fo=
r our very simplistic mining scheme. Essentially, when mining a block, the =
person mining has to hash the data for the block (with SHA256, in our case)=
 and find a hash, which, in binary, starts with&nbsp;<code class=3D" pretty=
printed" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas=
, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-siz=
e: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-colo=
r: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"lit" style=
=3D"box-sizing: inherit;">00</span></code>&nbsp;(two zeros). This also deno=
tes our =93difficulty=94 on the network.</p><p style=3D"box-sizing: inherit=
; margin-top: 0px; margin-bottom: 2rem;">As you can imagine, the time to fi=
nd a suitable hash increases quite a bit if we want three, four, five, or e=
ven 20 leading zeros. In a =93real=94 blockchain system, this difficulty wo=
uld be a network attribute, which is agreed upon between nodes based on a c=
onsensus algorithm and based on the network=92s hash-power, so the network =
can guarantee to produce a new block in a certain amount of time.</p><p sty=
le=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">We won=92=
t deal with this here. For simplicity=92s sake, we=92ll just hardcode it to=
 two leading zeros. This doesn=92t take too long to compute on normal hardw=
are, so we don=92t need to worry about waiting too long when testing.</p><p=
 style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Next,=
 we have a helper function, which is simply the binary representation of a =
given byte array in the form of a&nbsp;<code class=3D" prettyprinted" style=
=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Libera=
tion Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; pad=
ding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 24=
7, 249); border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizing: =
inherit;">String</span></code>. This is used to conveniently check whether =
a hash fits our&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: in=
herit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &=
quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4re=
m; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-ra=
dius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">DIFFICUL=
TY_PREFIX</span></code>&nbsp;condition. There are, obviously, much more ele=
gant and faster ways to do this, but this is simple and works for our case.=
</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;"=
>Now to the logic of validating a&nbsp;<code class=3D" prettyprinted" style=
=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Libera=
tion Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; pad=
ding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 24=
7, 249); border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizing: =
inherit;">Block</span></code>. This is important because it ensures our blo=
ckchain adheres to it=92s chain property and is hard to tamper with. The di=
fficulty of changing something increases with every block since you=92d hav=
e to recalculate (i.e., re-mine) the rest of the chain to get a valid chain=
 again. This would be expensive enough to disincentivise you in a real bloc=
kchain system)</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-=
bottom: 2rem;">There are a few rules of thumb you should follow:</p><ol sty=
le=3D"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem;"><li st=
yle=3D"box-sizing: inherit;">The&nbsp;<code class=3D" prettyprinted" style=
=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Libera=
tion Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; pad=
ding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 24=
7, 249); border-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: =
inherit;">previous_hash</span></code>&nbsp;needs to actually match the hash=
 of the last block in the chain</li><li style=3D"box-sizing: inherit;">The&=
nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-fami=
ly: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New=
&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(18=
9, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;">=
<span class=3D"pln" style=3D"box-sizing: inherit;">hash</span></code>&nbsp;=
needs to start with our&nbsp;<code class=3D" prettyprinted" style=3D"box-si=
zing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&=
quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2r=
em 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); b=
order-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">=
DIFFICULTY_PREFIX</span></code>&nbsp;(i.e., two zeros), which indicated tha=
t it was mined correctly</li><li style=3D"box-sizing: inherit;">The&nbsp;<c=
ode class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Men=
lo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;,=
 monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, =
71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span c=
lass=3D"pln" style=3D"box-sizing: inherit;">id</span></code>&nbsp;needs to =
be the latest ID incremented by 1</li><li style=3D"box-sizing: inherit;">Th=
e hash needs to actually be correct; hashing the data of the block needs to=
 give us the block hash (otherwise, you might as well just create a random =
hash starting with&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing:=
 inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;=
, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.=
4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border=
-radius: 0.25rem;"><span class=3D"lit" style=3D"box-sizing: inherit;">001</=
span></code>)</li></ol><p style=3D"box-sizing: inherit; margin-top: 0px; ma=
rgin-bottom: 2rem;">If we think about this as a distributed system, you mig=
ht notice that it=92s possible to run into trouble here. What if two nodes =
mine a block at the same time based on block ID&nbsp;<code class=3D" pretty=
printed" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas=
, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-siz=
e: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-colo=
r: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"lit" style=
=3D"box-sizing: inherit;">5</span></code>? They would both create block ID&=
nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-fami=
ly: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New=
&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(18=
9, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;">=
<span class=3D"lit" style=3D"box-sizing: inherit;">6</span></code>&nbsp;wit=
h the previous block pointing to block ID&nbsp;<code class=3D" prettyprinte=
d" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quo=
t;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.=
2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb=
(247, 247, 249); border-radius: 0.25rem;"><span class=3D"lit" style=3D"box-=
sizing: inherit;">5</span></code>.</p><p style=3D"box-sizing: inherit; marg=
in-top: 0px; margin-bottom: 2rem;">So then we=92d be sent both blocks. We w=
ould validate them and add the first one coming in, but the second one woul=
d be thrown out during validation since we already have a block with ID&nbs=
p;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family:=
 Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&qu=
ot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, =
65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><sp=
an class=3D"lit" style=3D"box-sizing: inherit;">6</span></code>.</p><p styl=
e=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">This is an=
 inherent problem in a system such as this and the reason there needs to be=
 a consensus algorithm between nodes to decide which blocks (i.e., which ch=
ain) to agree on and use.</p><p style=3D"box-sizing: inherit; margin-top: 0=
px; margin-bottom: 2rem;">Optimally, if the block you mined isn=92t added t=
o the agreed -upon chain, you=92ll have to mine it again and hope it works =
better the next time. In our simple case here, this retry mechanism won=92t=
 be implemented; if such a race happens, that node is essentially out of th=
e game.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom:=
 2rem;">There are more sophisticated approaches to fix this in the blockcha=
in space, of course. For example, if we were to send our data as =93transac=
tions=94 to other nodes and nodes would mine blocks with a set of transacti=
ons, this would be somewhat mitigated. But then everyone would mine all the=
 time and the fastest one wins. So, as you can see, this would generate add=
itional, but less severe, problems we=92d have to fix.</p><p style=3D"box-s=
izing: inherit; margin-top: 0px; margin-bottom: 2rem;">Anyway, our simple a=
pproach will work for our local test network.</p><h2 id=3D"which-chain-to-u=
se" style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 1.5rem; f=
ont-family: &quot;PT Sans&quot;; line-height: 1.1; color: rgb(17, 17, 17); =
font-size: 2rem;">Which chain to use?</h2><p style=3D"box-sizing: inherit; =
margin-top: 0px; margin-bottom: 2rem;">Now that we can validate a block, le=
t=92s implement logic for validating a whole chain:</p><pre class=3D"langua=
ge-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: Menl=
o, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, =
monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; overflo=
w: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; backgro=
und: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">impl </span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">App</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    fn is_chain_valid</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"kwd" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> chain</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">&amp;[</span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">Block</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">])</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">-&gt;</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span=
 class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">bool</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> i </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">in</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"bo=
x-sizing: inherit; color: rgb(0, 102, 102);">0.</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">chain</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">len</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> i </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">=3D=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" =
style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">0</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">continue</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> first </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> chain</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">get</sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">i </span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">-</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: in=
herit; color: rgb(0, 102, 102);">1</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span=
 class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"has t=
o exist"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> second </span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> chain</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span=
 class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">get</s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);">i</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D=
"box-sizing: inherit; color: rgb(0, 136, 0);">"has to exist"</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">!</span><span class=3D"kwd" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">is_block_valid</sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">second</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> first</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">true</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">Ignoring the genesis block, we basically just go through=
 all the blocks and validate them. If one block fails the validation, we fa=
il the whole chain.</p><p style=3D"box-sizing: inherit; margin-top: 0px; ma=
rgin-bottom: 2rem;">There=92s one more method left in&nbsp;<code class=3D" =
prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Co=
nsolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; fo=
nt-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); backgroun=
d-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" s=
tyle=3D"box-sizing: inherit;">App</span></code>&nbsp;that will help us choo=
se which chain to use:</p><pre class=3D"language-rust hljs prettyprinted" s=
tyle=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Li=
beration Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px;=
 margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 7=
6); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !impo=
rtant;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);">impl </span><span class=3D"typ" style=3D"box-sizing: inherit; color: r=
gb(102, 0, 102);">App</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136=
, 0, 0);">// We always choose the longest valid chain</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    fn choose_chain</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">lo=
cal</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">Vec</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> remote</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Vec</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">Vec</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> is_local_valid </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"=
kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>is_chain_valid</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">(&amp;</span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">local</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> is_remote_valid </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D=
"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">is_chain_valid</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">remote</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> is_local_valid </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">&amp;&amp;</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> is_remote_valid =
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 136);">local</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">len</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
&gt;=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> remote</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">len</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">local</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                remote
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> is_remote_valid </span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&=
amp;&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">!</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">is_local_valid </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            remote
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">is_remote_va=
lid </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">&amp;&amp;</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> is_local_valid </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">local</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            panic</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: =
inherit; color: rgb(0, 136, 0);">"local and remote chains are both invalid"=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">This happens if we ask another node for its chain to det=
ermine whether it=92s =93better=94 (according to our consensus algorithm) t=
han our local one.</p><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">Our criteria is simply the length of the chain. In real =
systems, there are usually more factors, such as the difficulty factored in=
 and many other possibilities. For the purpose of this exercise, if a (vali=
d) chain is longer than the other, then we take that one.</p><p style=3D"bo=
x-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">We validate both =
our local and the remote chain and take the longer one. We will also be abl=
e to use this functionality during startup when we ask other nodes for thei=
r chain and. Since ours only includes a genesis block, we=92ll immediately =
get up to speed with the =93agreed on=94 chain.</p><h2 id=3D"mining" style=
=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 1.5rem; font-famil=
y: &quot;PT Sans&quot;; line-height: 1.1; color: rgb(17, 17, 17); font-size=
: 2rem;">Mining</h2><p style=3D"box-sizing: inherit; margin-top: 0px; margi=
n-bottom: 2rem;">To finish our blockchain-related logic, let=92s implement =
our basic mining scheme.</p><pre class=3D"language-rust hljs prettyprinted"=
 style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;=
Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2p=
x; margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77,=
 76); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !im=
portant;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">impl </span><span class=3D"typ" style=3D"box-sizing: inherit; color:=
 rgb(102, 0, 102);">Block</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
    pub fn </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> u64</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> previous_=
hash</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; =
color: rgb(102, 0, 102);">String</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> data</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><s=
pan class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">S=
tring</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"bo=
x-sizing: inherit; color: rgb(102, 0, 102);">Self</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> now </span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Utc</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">now</sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">();</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">nonce</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hash</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> mine_block</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> now</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">times=
tamp</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">(),</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">previous_hash</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&am=
p;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);">data</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);">
        </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Self</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
            id</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">
            hash</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            timestamp</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> now</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">timestamp</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            previous_hash</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
            data</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            nonce</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">When a new block is created, we call&nbsp;<code class=3D=
" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, =
Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; =
font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); backgro=
und-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"pln"=
 style=3D"box-sizing: inherit;">mine_block</span></code>, which will return=
 a&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-f=
amily: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier =
New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb=
(189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem=
;"><span class=3D"pln" style=3D"box-sizing: inherit;">nonce</span></code>&n=
bsp;and a&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit;=
 font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;C=
ourier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; col=
or: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius: =
0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">hash</span></c=
ode>. Then we can create the block with its timestamp, the given data, ID, =
previous hash, and the new hash and nonce.</p><p style=3D"box-sizing: inher=
it; margin-top: 0px; margin-bottom: 2rem;">We talked about all of the above=
 fields, except for the&nbsp;<code class=3D" prettyprinted" style=3D"box-si=
zing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&=
quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2r=
em 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); b=
order-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">=
nonce</span></code>. To explain what this is, let=92s look at the&nbsp;<cod=
e class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo=
, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, m=
onospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71=
); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span cla=
ss=3D"pln" style=3D"box-sizing: inherit;">mine_block</span></code>&nbsp;fun=
ction:</p><pre class=3D"language-rust hljs prettyprinted" style=3D"box-sizi=
ng: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&qu=
ot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; margin-top: 0px=
; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height: =
500px; padding: 0.5em; background: rgb(237, 237, 237) !important;"><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">fn mine_blo=
ck</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> u64</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> timestamp</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> i64<=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> previous_hash</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">&amp;</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">str</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> d=
ata</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">str</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">-&gt;</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">u64</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inh=
erit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"mining block..."</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut nonce </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" styl=
e=3D"box-sizing: inherit; color: rgb(0, 102, 102);">0</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    loop </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> nonce </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">%</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=
=3D"box-sizing: inherit; color: rgb(0, 102, 102);">100000</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D=
=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"lit" style=3D"box-sizing: inherit; color: rgb=
(0, 102, 102);">0</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
            info</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"nonce: {}"</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> nonce</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> hash </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> calculate_hash</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">id</s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);"> timestamp</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> previous_hash</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> data</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> nonce</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> binary_hash </span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hash_to_binary_representa=
tion</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">hash</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> binary_hash</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">starts_with</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">DIFF=
ICULTY_PREFIX</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
            info</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
                </span><span class=3D"str" style=3D"box-sizing: inherit; co=
lor: rgb(0, 136, 0);">"mined! nonce: {}, hash: {}, binary hash: {}"</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);">
                nonce</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
                hex</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">encode</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">hash</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">),</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                binary_hash
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">nonce</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hex</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">encode</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">hash</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">));</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        nonce </span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">+=3D</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">1</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">After announcing that we=92re about to mine a block, we =
set the&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; f=
ont-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Cou=
rier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color=
: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.=
25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">nonce</span></co=
de>&nbsp;to 0.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-=
bottom: 2rem;">Then, we start an endless loop, which increments the&nbsp;<c=
ode class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Men=
lo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;,=
 monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, =
71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span c=
lass=3D"pln" style=3D"box-sizing: inherit;">nonce</span></code>&nbsp;in eac=
h step. Inside the loop, besides logging every 100000=92s iteration to have=
 a rough progress indicator, we calculate a hash over the data of the block=
 using&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; fo=
nt-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Cour=
ier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color:=
 rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.2=
5rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">calculate_hash</s=
pan></code>, which we=92ll check out next.</p><p style=3D"box-sizing: inher=
it; margin-top: 0px; margin-bottom: 2rem;">Then, we use our&nbsp;<code clas=
s=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Mona=
co, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospa=
ce; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); bac=
kground-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"=
pln" style=3D"box-sizing: inherit;">hash_to_binary_representation</span></c=
ode>&nbsp;helper and check whether the calculated hash adheres to our diffi=
culty criteria of starting with two zeros.</p><p style=3D"box-sizing: inher=
it; margin-top: 0px; margin-bottom: 2rem;">If so, we log it and return the&=
nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-fami=
ly: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New=
&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(18=
9, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;">=
<span class=3D"pln" style=3D"box-sizing: inherit;">nonce</span></code>, the=
 incrementing integer, where it happened, and the (hex-encoded) hash. Other=
wise, we increment&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing:=
 inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;=
, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.=
4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border=
-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">nonce=
</span></code>&nbsp;and go again.</p><p style=3D"box-sizing: inherit; margi=
n-top: 0px; margin-bottom: 2rem;">Essentially, we=92re desperately trying t=
o find a piece of data =97 in this case, the&nbsp;<code class=3D" prettypri=
nted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &=
quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: =
16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: =
rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"pln" style=3D"b=
ox-sizing: inherit;">nonce</span></code>&nbsp;and a number, which, together=
 with our block data hashed using SHA256, will give us a hash starting with=
 two zeros.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bot=
tom: 2rem;">We need to record this&nbsp;<code class=3D" prettyprinted" styl=
e=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liber=
ation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; pa=
dding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 2=
47, 249); border-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing:=
 inherit;">nonce</span></code>&nbsp;in our block so other nodes can verify =
our hash, since the&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing=
: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot=
;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0=
.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); borde=
r-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">nonc=
e</span></code>&nbsp;is hashed together with the block data. For example, i=
f it would take us 52,342 iterations to calculate a fitting hash (starting =
with two zeros), the&nbsp;<code class=3D" prettyprinted" style=3D"box-sizin=
g: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quo=
t;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem =
0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); bord=
er-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">non=
ce</span></code>&nbsp;would be&nbsp;<code class=3D" prettyprinted" style=3D=
"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberatio=
n Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; paddin=
g: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, =
249); border-radius: 0.25rem;"><span class=3D"lit" style=3D"box-sizing: inh=
erit;">52341</span></code>&nbsp;(1 less, since it starts at 0).</p><p style=
=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Let=92s loo=
k at the utility for actually creating the SHA256 hash as well.</p><pre cla=
ss=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-=
family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier=
 New&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2=
rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.=
5em; background: rgb(237, 237, 237) !important;"><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">fn calculate_hash</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">id</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> u64</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> timestamp</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> i64</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> =
previous_hash</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">str</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> data</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">str</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> nonce</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> u64</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> =
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">-&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; =
color: rgb(102, 0, 102);">Vec</span><span class=3D"str" style=3D"box-sizing=
: inherit; color: rgb(0, 136, 0);">&lt;u8&gt;</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> data </span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> serde_json</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">json</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
!({</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);"> id</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> previous_hash</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> data</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> timestamp</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> nonce
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">});</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut hasher </span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" sty=
le=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Sha256</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span=
><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">=
new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">();</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">
    hasher</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">update</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">data</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_string</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">().</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);">as_bytes</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    hasher</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">finalize</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">().</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">as_slice</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">().</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_=
owned</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">This one is rather straightforward. We create a JSON-rep=
resentation of our block data using the current nonce and put it through&nb=
sp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family=
: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&q=
uot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189,=
 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><s=
pan class=3D"pln" style=3D"box-sizing: inherit;">sha2</span></code>=91s SHA=
256 hasher, returning a&nbsp;<code class=3D" prettyprinted" style=3D"box-si=
zing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&=
quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2r=
em 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); b=
order-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizing: inherit;">=
Vec</span><span class=3D"str" style=3D"box-sizing: inherit;">&lt;u8&gt;</sp=
an></code>.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bot=
tom: 2rem;">That=92s essentially all of our blockchain logic implemented. W=
e have a blockchain data structure: a list of blocks. We have blocks, which=
 point to the previous block. Theseare required to have an increasing ID nu=
mber and a hash that adheres to our rules of mining.</p><p style=3D"box-siz=
ing: inherit; margin-top: 0px; margin-bottom: 2rem;">If we ask to get new b=
locks from other nodes, we validate them and, if they=92re OK, add them to =
the chain. If we get a full blockchain from another node, we also validate =
it and, if it=92s longer than ours (i.e., has more blocks in it), we replac=
e our own chain with it.</p><p style=3D"box-sizing: inherit; margin-top: 0p=
x; margin-bottom: 2rem;">As you can imagine, since every node implements th=
is exact logic, blocks and the agreed-on chains can propagate through the n=
etwork quickly and the network converges to the same state (as with the afo=
rementioned error handling limitations in our simple case).</p><h2 id=3D"pe=
er-to-peer-basics" style=3D"box-sizing: inherit; margin-top: 0px; margin-bo=
ttom: 1.5rem; font-family: &quot;PT Sans&quot;; line-height: 1.1; color: rg=
b(17, 17, 17); font-size: 2rem;">Peer-to-peer basics</h2><p style=3D"box-si=
zing: inherit; margin-top: 0px; margin-bottom: 2rem;">Next, we=92ll impleme=
nt the&nbsp;<a href=3D"https://blog.logrocket.com/libp2p-tutorial-build-a-p=
eer-to-peer-app-in-rust/" target=3D"_blank" rel=3D"noopener" style=3D"box-s=
izing: inherit; color: rgb(118, 74, 188); text-decoration-line: none; touch=
-action: manipulation;">P2P-based network stack</a>.</p><p style=3D"box-siz=
ing: inherit; margin-top: 0px; margin-bottom: 2rem;">Start by creating a&nb=
sp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family=
: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&q=
uot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189,=
 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><s=
pan class=3D"pln" style=3D"box-sizing: inherit;">p2p</span><span class=3D"p=
un" style=3D"box-sizing: inherit;">.</span><span class=3D"pln" style=3D"box=
-sizing: inherit;">rs</span></code>&nbsp;file, which will hold most of the =
peer-to-peer logic we=92ll use in our application.</p><p style=3D"box-sizin=
g: inherit; margin-top: 0px; margin-bottom: 2rem;">There, again, we define =
some basic data structures and constants we=92ll need:</p><pre class=3D"lan=
guage-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: M=
enlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot=
;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; over=
flow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; back=
ground: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">pub </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">static</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> KEYS</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(10=
2, 0, 102);">Lazy</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"b=
ox-sizing: inherit; color: rgb(102, 0, 102);">Lazy</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cl=
ass=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">identity</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing: in=
herit; color: rgb(102, 0, 102);">Keypair</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">generate_ed25519</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">static</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> PEER_ID</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Lazy</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102,=
 0, 102);">Lazy</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">(||</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ=
" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">PeerId</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::<=
/span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 13=
6);">from</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">KEYS</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">.</span><span class=3D"kwd" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 136);">public</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()));</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">static</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> CHAIN_TOPIC</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" =
style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Lazy</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Lazy</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">(||</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Topic</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">::</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inhe=
rit; color: rgb(0, 136, 0);">"chains"</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">));</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">static</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> BLOCK_TOPIC</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" =
style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Lazy</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Lazy</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">(||</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Topic</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">::</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inhe=
rit; color: rgb(0, 136, 0);">"blocks"</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">));</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

</span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0,=
 0);">#[derive(Debug, Serialize, Deserialize)]</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">struct</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inheri=
t; color: rgb(102, 0, 102);">ChainResponse</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub blocks</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing:=
 inherit; color: rgb(102, 0, 102);">Vec</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub receiver</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

</span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0,=
 0);">#[derive(Debug, Serialize, Deserialize)]</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">struct</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inheri=
t; color: rgb(102, 0, 102);">LocalChainRequest</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub from_peer_id</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-s=
izing: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">enum</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit;=
 color: rgb(102, 0, 102);">EventType</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102=
, 0, 102);">LocalChainResponse</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">ChainResponse</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">),</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102=
, 0, 102);">Input</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"box-sizing: i=
nherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">),</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102=
, 0, 102);">Init</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

</span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0,=
 0);">#[derive(NetworkBehaviour)]</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">struct</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inheri=
t; color: rgb(102, 0, 102);">AppBehaviour</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub floodsub</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">Floodsub</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub mdns</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: i=
nherit; color: rgb(102, 0, 102);">Mdns</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136=
, 0, 0);">#[behaviour(ignore)]</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    pub response_sender</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"=
typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">UnboundedSende=
r</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
    </span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136=
, 0, 0);">#[behaviour(ignore)]</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    pub init_sender</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"typ" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 0, 102);">UnboundedSender</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">
    </span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136=
, 0, 0);">#[behaviour(ignore)]</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    pub app</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: in=
herit; color: rgb(102, 0, 102);">App</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">Starting from the top, we define a key pair and a derive=
d peer ID. Those are simply libp2p=92s intrinsics for identifying a client =
on the network.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin=
-bottom: 2rem;">Then, we define two so-called&nbsp;<code class=3D" prettypr=
inted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, =
&quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size:=
 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color:=
 rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"pln" style=3D"=
box-sizing: inherit;">topics</span></code>:&nbsp;<code class=3D" prettyprin=
ted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &q=
uot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 1=
6.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: r=
gb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"pln" style=3D"bo=
x-sizing: inherit;">chains</span></code>&nbsp;and&nbsp;<code class=3D" pret=
typrinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consol=
as, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-s=
ize: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-co=
lor: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"pln" style=
=3D"box-sizing: inherit;">blocks</span></code>. We=92ll use the&nbsp;<code =
class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, =
Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, mon=
ospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71);=
 background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=
=3D"typ" style=3D"box-sizing: inherit;">FloodSub</span></code>&nbsp;protoco=
l, a simple publish/subscribe protocol, for communication between the nodes=
.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;=
">This has the advantage, that it=92s very simple to set up and use, but th=
e disadvantage, that we need to broadcast every piece of information. So ev=
en if we just want to respond to one client=92s =93request for our chain=94=
, that client will send this request to all nodes they=92re connected to on=
 the network and we will also send our response to all of them.</p><p style=
=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">This is no =
problem in terms of correctness, but in terms of efficiency, it=92s obvious=
ly horrendous. This could be handled by a simple point-to-point request/res=
ponse model, which is something libp2p supports, but this would simply add =
even more complexity to this already complex example. If you=92re intereste=
d, you can check out the&nbsp;<a href=3D"https://docs.rs/libp2p/0.41.0/libp=
2p/request_response/index.html" style=3D"box-sizing: inherit; color: rgb(11=
8, 74, 188); text-decoration-line: none; touch-action: manipulation;">libp2=
p</a>&nbsp;<a href=3D"https://docs.rs/libp2p/0.41.0/libp2p/request_response=
/index.html" style=3D"box-sizing: inherit; color: rgb(118, 74, 188); text-d=
ecoration-line: none; touch-action: manipulation;">docs</a>.</p><p style=3D=
"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">We could also =
use the more efficient&nbsp;<code class=3D" prettyprinted" style=3D"box-siz=
ing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&q=
uot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2re=
m 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); bo=
rder-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizing: inherit;">G=
ossipSub</span></code>&nbsp;instead of&nbsp;<code class=3D" prettyprinted" =
style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;L=
iberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px=
; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(24=
7, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-siz=
ing: inherit;">FloodSub</span></code>. But, again, it=92s not as convenient=
 to set up and we=92re really not particularly interested in performance at=
 this point. The interface is very similar. Again, if you=92re interested i=
n playing around with this, check out the&nbsp;<a href=3D"https://docs.rs/l=
ibp2p/0.41.0/libp2p/gossipsub/index.html" style=3D"box-sizing: inherit; col=
or: rgb(118, 74, 188); text-decoration-line: none; touch-action: manipulati=
on;">official docs</a>.</p><p style=3D"box-sizing: inherit; margin-top: 0px=
; margin-bottom: 2rem;">Anyway, the topics are basically =93channels=94 to =
subscribe to. We can subscribe to =93chains=94 and use them to send our loc=
al blockchain to other nodes and to receive theirs. The same is true for =
=93blocks=94, which we=92ll use to broadcast and receive new blocks.</p><p =
style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Next u=
p, we have the concept of a&nbsp;<code class=3D" prettyprinted" style=3D"bo=
x-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation M=
ono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: =
0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249=
); border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizing: inheri=
t;">ChainResponse</span></code>&nbsp;holding a list of blocks and a receive=
r. This is a struct, which we=92ll expect if someone sends us their local b=
lockchain and use to send them our local chain.</p><p style=3D"box-sizing: =
inherit; margin-top: 0px; margin-bottom: 2rem;">The&nbsp;<code class=3D" pr=
ettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Cons=
olas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font=
-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-=
color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" sty=
le=3D"box-sizing: inherit;">LocalChainRequest</span></code>&nbsp;is what tr=
iggers this interaction. If we send a&nbsp;<code class=3D" prettyprinted" s=
tyle=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Li=
beration Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px;=
 padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247=
, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizi=
ng: inherit;">LocalChainRequest</span></code>&nbsp;with the&nbsp;<code clas=
s=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Mona=
co, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospa=
ce; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); bac=
kground-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"=
pln" style=3D"box-sizing: inherit;">peer_id</span></code>&nbsp;of another n=
ode in the system, this will trigger that they send us their chain back, as=
 we=92ll see later on.</p><p style=3D"box-sizing: inherit; margin-top: 0px;=
 margin-bottom: 2rem;">To handle incoming messages, lazy initialization, an=
d keyboard-input by the client=92s user, we define the&nbsp;<code class=3D"=
 prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, C=
onsolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; f=
ont-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); backgrou=
nd-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" =
style=3D"box-sizing: inherit;">EventType</span></code>&nbsp;enum, which wil=
l help us send events across the application to keep our application state =
in sync with incoming and outgoing network traffic.</p><p style=3D"box-sizi=
ng: inherit; margin-top: 0px; margin-bottom: 2rem;">Finally, the core of th=
e P2P functionality is our&nbsp;<code class=3D" prettyprinted" style=3D"box=
-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mo=
no&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0=
.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249)=
; border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizing: inherit=
;">AppBehaviour</span></code>, which implements&nbsp;<code class=3D" pretty=
printed" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas=
, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-siz=
e: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-colo=
r: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" style=
=3D"box-sizing: inherit;">NetworkBehaviour</span></code>, libp2p=92s concep=
t for implementing a decentralized network stack.</p><p style=3D"box-sizing=
: inherit; margin-top: 0px; margin-bottom: 2rem;">We won=92t go into the ni=
tty-gritty here, but my&nbsp;<a href=3D"https://blog.logrocket.com/libp2p-t=
utorial-build-a-peer-to-peer-app-in-rust/" target=3D"_blank" rel=3D"noopene=
r" style=3D"box-sizing: inherit; color: rgb(118, 74, 188); text-decoration-=
line: none; touch-action: manipulation;">comprehensive libp2p tutorial</a>&=
nbsp;goes into more detail on this.</p><p style=3D"box-sizing: inherit; mar=
gin-top: 0px; margin-bottom: 2rem;">The&nbsp;<code class=3D" prettyprinted"=
 style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;=
Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2p=
x; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(2=
47, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-si=
zing: inherit;">AppBehaviour</span></code>&nbsp;holds our FloodSub instance=
 for pub/sub communication and and Mdns instance, which will enable us to a=
utomatically find other nodes on our local network (but not outside of it).=
</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;"=
>We also add our blockchain&nbsp;<code class=3D" prettyprinted" style=3D"bo=
x-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation M=
ono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: =
0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249=
); border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizing: inheri=
t;">App</span></code>&nbsp;to this behaviour, as well as channels for sendi=
ng events for both initialization and request/response communication betwee=
n parts of the app. We=92ll see this in action later on.</p><p style=3D"box=
-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Initializing the&n=
bsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-famil=
y: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&=
quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189=
, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><=
span class=3D"typ" style=3D"box-sizing: inherit;">AppBehaviour</span></code=
>&nbsp;is also rather straightforward:</p><pre class=3D"language-rust hljs =
prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Co=
nsolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; fo=
nt-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; overflow: auto; colo=
r: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; background: rgb(237,=
 237, 237) !important;"><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">impl </span><span class=3D"typ" style=3D"box-sizing: i=
nherit; color: rgb(102, 0, 102);">AppBehaviour</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">async</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> fn </span><span class=3D"kwd" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        app</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: in=
herit; color: rgb(102, 0, 102);">App</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        response_sender</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"=
typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">UnboundedSende=
r</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
        init_sender</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"typ" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 0, 102);">UnboundedSender</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box=
-sizing: inherit; color: rgb(102, 0, 102);">Self</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> mut behaviour </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"t=
yp" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Self</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">
            app</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);">
            floodsub</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-s=
izing: inherit; color: rgb(102, 0, 102);">Floodsub</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cl=
ass=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">(*</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">PEER_ID</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">),</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            mdns</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">Mdns</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"=
kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</sp=
an><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102=
);">Default</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">default</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">())</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">.</span><span class=3D"kwd" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 136);">await</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" styl=
e=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"can create mdns"</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
),</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);">
            response_sender</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
            init_sender</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">};</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
        behaviour</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">floodsub</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">subscribe</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">CH=
AIN_TOPIC</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
        behaviour</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">floodsub</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">subscribe</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">BL=
OCK_TOPIC</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">

        behaviour
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><h2 id=3D"handling-incoming-messages" style=3D"box-si=
zing: inherit; margin-top: 0px; margin-bottom: 1.5rem; font-family: &quot;P=
T Sans&quot;; line-height: 1.1; color: rgb(17, 17, 17); font-size: 2rem;">H=
andling incoming messages</h2><p style=3D"box-sizing: inherit; margin-top: =
0px; margin-bottom: 2rem;">First, we implement the handlers for data coming=
 in from other nodes.</p><p style=3D"box-sizing: inherit; margin-top: 0px; =
margin-bottom: 2rem;">We=92ll start with the Mdns events since they=92re ba=
sically boilerplate:</p><pre class=3D"language-rust hljs prettyprinted" sty=
le=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Libe=
ration Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; m=
argin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76)=
; max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !import=
ant;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">impl </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">NetworkBehaviourEventProcess</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&lt;</span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">MdnsEvent<=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">AppBehaviour</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    fn inject_event</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">ev=
ent</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">MdnsEvent</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        match </span><span class=3D"kwd" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 136);">event</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"typ" style=3D"box-sizing: inherit; color:=
 rgb(102, 0, 102);">MdnsEvent</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">Discovered</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">disco=
vered_list</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> _addr</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 136);">in</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> discovered_list </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">floodsub</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">add_node_to=
_partial_view</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
            </span><span class=3D"typ" style=3D"box-sizing: inherit; color:=
 rgb(102, 0, 102);">MdnsEvent</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">Expired</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expired_=
list</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> _addr</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 136);">in</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> expired_list </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">!</span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">mdns</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">has_node</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">floodsub</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">remov=
e_node_from_partial_view</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">If a new node is discovered, we add it to our FloodSub l=
ist of nodes so we can communicate. Once it expires, we remove it again.</p=
><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Mo=
re interesting is the implementation of the&nbsp;<code class=3D" prettyprin=
ted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &q=
uot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 1=
6.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: r=
gb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" style=3D"bo=
x-sizing: inherit;">NetworkBehaviour</span></code>&nbsp;for our FloodSub co=
mmunication protocol.</p><pre class=3D"language-rust hljs prettyprinted" st=
yle=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Lib=
eration Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; =
margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76=
); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !impor=
tant;"><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0,=
 0);">// incoming event handler</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
impl </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(10=
2, 0, 102);">NetworkBehaviourEventProcess</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">for</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">AppBe=
haviour</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
    fn inject_event</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">ev=
ent</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">FloodsubEvent</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-=
sizing: inherit; color: rgb(102, 0, 102);">FloodsubEvent</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><=
span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">=
Message</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">msg</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"=
kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">event</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">Ok</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">resp</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> serde_json</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">from_slice</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::(&amp;</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">msg</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">data</span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> resp</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">receiver </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D=3D</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">=
 PEER_ID</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">to_string</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    info</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-s=
izing: inherit; color: rgb(0, 136, 0);">"Response from {}:"</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> ms=
g</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">source</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
                    resp</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">iter</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">().</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">=
for_each</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">(|</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">r</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">|</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> info</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!(</span><span class=3D"=
str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"{:?}"</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;"> r</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">));</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">

                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">blocks </span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">choose_chain</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span=
><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">=
self</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">app</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">clone</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> re=
sp</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pl=
n" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">let</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102=
);">Ok</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">resp</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">from_slice</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">::(&amp;</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">msg</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">data</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">
                info</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"sending local chain to {}"</span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
> msg</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">source</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">to_string</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">());</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> peer_id </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> resp</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">from=
_peer_id</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">;</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> PEER_ID</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_string</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">=3D=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> peer_id </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" =
style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Err</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">e</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">response_sender</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">send</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">(</span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">ChainResponse</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        blocks</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">app</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">blocks</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        receiver</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> msg</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">source</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">to_string</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">})</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        error</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"error sending response via ch=
annel, {}"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> e</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pl=
n" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">let</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102=
);">Ok</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">from_slice</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">::(&amp;</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">msg</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">data</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);">
                info</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"received new block from {}"</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> msg</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">source</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">to_string</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">());</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">try_add_block</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">block</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">For incoming events, which are&nbsp;<code class=3D" pret=
typrinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consol=
as, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-s=
ize: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-co=
lor: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" style=
=3D"box-sizing: inherit;">FloodsubEvent</span><span class=3D"pun" style=3D"=
box-sizing: inherit;">::</span><span class=3D"typ" style=3D"box-sizing: inh=
erit;">Message</span></code>, we check whether the payload fits any of our =
expected data structures.</p><p style=3D"box-sizing: inherit; margin-top: 0=
px; margin-bottom: 2rem;">If it=92s a&nbsp;<code class=3D" prettyprinted" s=
tyle=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Li=
beration Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px;=
 padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247=
, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" style=3D"box-sizi=
ng: inherit;">ChainResponse</span></code>, it means we got sent a local blo=
ckchain by another node.</p><p style=3D"box-sizing: inherit; margin-top: 0p=
x; margin-bottom: 2rem;">We check wether we=92re actually the receiver of s=
aid piece of data and, if so, log the incoming blockchain and attempt to ex=
ecute our consensus. If it=92s valid and longer than our chain, we replace =
our chain with it. Otherwise, we keep our own chain.</p><p style=3D"box-siz=
ing: inherit; margin-top: 0px; margin-bottom: 2rem;">If the incoming data i=
s a&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-=
family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier=
 New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rg=
b(189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25re=
m;"><span class=3D"typ" style=3D"box-sizing: inherit;">LocalChainRequest</s=
pan></code>, we check whether we=92re the ones they want the chain from, ch=
ecking the&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit=
; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;=
Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; co=
lor: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius:=
 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">from_peer_id<=
/span></code>. If so, we simply send them a JSON version of our local block=
chain. The actual sending part is in another part of the code, but for now,=
 we simply send it through our event channel for responses.</p><p style=3D"=
box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Finally, if it=
=92s a&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; fo=
nt-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Cour=
ier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color:=
 rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.2=
5rem;"><span class=3D"typ" style=3D"box-sizing: inherit;">Block</span></cod=
e>&nbsp;that=92s incoming, that means someone else mined a block and wants =
us to add it to our local chain. We check whether the block is valid and, i=
f it is, add it.</p><h2 id=3D"putting-it-all-together" style=3D"box-sizing:=
 inherit; margin-top: 0px; margin-bottom: 1.5rem; font-family: &quot;PT San=
s&quot;; line-height: 1.1; color: rgb(17, 17, 17); font-size: 2rem;">Puttin=
g it all together</h2><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">Great! Now let=92s wire this all together and add some c=
ommands for users to interact with the application.</p><p style=3D"box-sizi=
ng: inherit; margin-top: 0px; margin-bottom: 2rem;">Back in&nbsp;<code clas=
s=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Mona=
co, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospa=
ce; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); bac=
kground-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"=
pln" style=3D"box-sizing: inherit;">main</span><span class=3D"pun" style=3D=
"box-sizing: inherit;">.</span><span class=3D"pln" style=3D"box-sizing: inh=
erit;">rs</span></code>, it=92s time to actually implement the&nbsp;<code c=
lass=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, M=
onaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, mono=
space; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); =
background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=
=3D"pln" style=3D"box-sizing: inherit;">main</span></code>&nbsp;function.</=
p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">W=
e start with the setup:</p><pre class=3D"language-rust hljs prettyprinted" =
style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;L=
iberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px=
; margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, =
76); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !imp=
ortant;"><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, =
0, 0);">#[tokio::main]</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 1=
36);">async</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);"> fn main</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pretty_env_logger</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">init</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">();</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"Peer Id: {}"</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">PEER_ID=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">response_sender</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> mut response_=
rcv</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">unbounded_channel</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>();</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">init_sender</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> mut init_rcv</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">unbounded_channel</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">();</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> auth_keys </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" styl=
e=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Keypair</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::::</sp=
an><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);=
">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">into_authentic</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">KEYS=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D"box=
-sizing: inherit; color: rgb(0, 136, 0);">"can create auth keys"</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> transp </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">TokioTcpConfig</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::=
</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 1=
36);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">upgrade</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">upgrade</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span clas=
s=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Version</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">::</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);">V1</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">authenticate</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">NoiseConfig</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>xx</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">auth_keys</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">into_authenticated</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">())</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">multiplex</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">mplex</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span clas=
s=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">MplexConf=
ig</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">())</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">boxed</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">();</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> behaviour </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">AppBehavio=
ur</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">App</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"=
kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> response_sender</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);"> init_sender</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">clone</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()).</=
span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136=
);">await</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">;</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut swarm </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" styl=
e=3D"box-sizing: inherit; color: rgb(102, 0, 102);">SwarmBuilder</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::<=
/span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 13=
6);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">transp</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> behaviour</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">*</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">p2p</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">PEER_ID</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">executor</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"b=
ox-sizing: inherit; color: rgb(102, 0, 102);">Box</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cla=
ss=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>(|</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">fut</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">|</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">
            spawn</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">fut</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}))</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">build</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">();</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut stdin </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" styl=
e=3D"box-sizing: inherit; color: rgb(102, 0, 102);">BufReader</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</sp=
an><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);=
">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">stdin</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">()).</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">lines</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">();</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102=
, 0, 102);">Swarm</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">listen_on</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">mut swarm</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"/ip4/0.0.0.0/tcp/0"</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">parse</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D=
"box-sizing: inherit; color: rgb(0, 136, 0);">"can get a local socket"</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">),</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D"box-siz=
ing: inherit; color: rgb(0, 136, 0);">"swarm can be started"</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    spawn</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">(</span><span class=3D"kwd" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 136);">async</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> move </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        sleep</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"box-sizing: inher=
it; color: rgb(102, 0, 102);">Duration</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">from_secs</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</spa=
n><span class=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102)=
;">1</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">)).</span><span class=3D"kwd" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 136);">await</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
        info</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inher=
it; color: rgb(0, 136, 0);">"sending init event"</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        init_sender</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">send</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"kwd" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 136);">true</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">).</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expe=
ct</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inherit; color: =
rgb(0, 136, 0);">"can send init event"</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">});</span></pre><p style=3D"box-sizing: inherit; margin-top: 0p=
x; margin-bottom: 2rem;">That=92s a whole lot of code, but it basically jus=
t sets up things we already talked about. We initialize logging and our two=
 event channels for initialization and responses.</p><p style=3D"box-sizing=
: inherit; margin-top: 0px; margin-bottom: 2rem;">Then, we initialize our k=
ey pair, the libp2p transport, behavior, and the libp2p Swarm, which is the=
 entity that runs our network stack.</p><p style=3D"box-sizing: inherit; ma=
rgin-top: 0px; margin-bottom: 2rem;">We also initialize a buffered reader o=
n&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-fa=
mily: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier N=
ew&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(=
189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;=
"><span class=3D"pln" style=3D"box-sizing: inherit;">stdin</span></code>&nb=
sp;so we can read incoming commands from the user and start our Swarm.</p><=
p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Fina=
lly, we spawn an asynchronous coroutine, which waits a second and then send=
s an initialization trigger on the init channel.</p><p style=3D"box-sizing:=
 inherit; margin-top: 0px; margin-bottom: 2rem;">This is the signal we=92ll=
 use after starting a node to wait for a bit until the node is up and conne=
cted. We then ask another node for their current blockchain to get us up to=
 speed.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom:=
 2rem;">The rest of&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing=
: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot=
;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0=
.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); borde=
r-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">main=
</span></code>&nbsp;is the interesting part =97 the part where we handle ke=
yboard events from the user, incoming data, and outgoing data.</p><pre clas=
s=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-f=
amily: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier =
New&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2r=
em; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5=
em; background: rgb(237, 237, 237) !important;"><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">    loop </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> evt </span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">select</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">!</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                line </span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> stdin</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">next_line</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: in=
herit; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span=
 class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Even=
tType</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing: inherit; col=
or: rgb(102, 0, 102);">Input</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">line</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</=
span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0=
);">"can get line"</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"can read line from st=
din"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">))),</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">
                response </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> response_rcv</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">recv</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">()</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"typ" style=3D"box-sizing: inherit=
; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cl=
ass=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">EventTy=
pe</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">::</span><span class=3D"typ" style=3D"box-sizing: inherit; color:=
 rgb(102, 0, 102);">LocalChainResponse</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">response</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">exp=
ect</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inherit; color:=
 rgb(0, 136, 0);">"response exists"</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">)))</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
                _init </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> init_rcv</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">recv</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"typ" style=3D"box-sizing: inherit=
; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cl=
ass=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">EventTy=
pe</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">::</span><span class=3D"typ" style=3D"box-sizing: inherit; color:=
 rgb(102, 0, 102);">Init</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">event</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> swarm</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">select_ne=
xt_some</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    info</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-s=
izing: inherit; color: rgb(0, 136, 0);">"Unhandled Swarm Event: {:?}"</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">event</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">None</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">};</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">

        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-=
sizing: inherit; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=
=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">event</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> evt </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
            match </span><span class=3D"kwd" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 136);">event</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                p2p</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing=
: inherit; color: rgb(102, 0, 102);">EventType</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Init</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> <=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> peers </span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pl=
n" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">ge=
t_list_peers</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    swarm</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">behaviour_mut</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">().</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">app</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">genesis</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">();</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">

                    info</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-s=
izing: inherit; color: rgb(0, 136, 0);">"connected nodes: {}"</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> =
peers</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">len</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">!</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">peers</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">is_empty</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
                        </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> req </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</s=
pan><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 10=
2);">LocalChainRequest</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
                            from_peer_id</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> peers
                                </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">iter</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                                </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">last</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                                </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span =
class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"at lea=
st one peer"</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
                                </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_string</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">};</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">

                        </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> json </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">::</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">to_string</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">req</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><=
span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"c=
an jsonify request"</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                        swarm
                            </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">behaviour_mut</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                            </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">floodsub
                            </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">publish</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">CHAIN_TOPIC</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> json</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">as_bytes</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">());</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
                    </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
                p2p</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing=
: inherit; color: rgb(102, 0, 102);">EventType</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">LocalChain=
Response</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">resp</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> json </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">to_string</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">resp</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><s=
pan class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"ca=
n jsonify response"</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                    swarm
                        </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">behaviour_mut</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">floodsub
                        </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">publish</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">C=
HAIN_TOPIC</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> json</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">as_bytes</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">());</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
                p2p</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing=
: inherit; color: rgb(102, 0, 102);">EventType</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Input</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">line</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> match line</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">as_s=
tr</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"str" style=3D"box-sizing: inherit=
; color: rgb(0, 136, 0);">"ls p"</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">h=
andle_print_peers</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">),</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    cmd </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> cmd</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">starts_with</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</=
span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0=
);">"ls c"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">handle_print_c=
hain</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">),</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">
                    cmd </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> cmd</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">starts_with</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</=
span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0=
);">"create b"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">handle_cre=
ate_block</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">cmd</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">&amp;</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">mut swarm</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">),=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">
                    _ </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> error</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!(</span><span class=
=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"unknown com=
mand"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">),</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px;=
 margin-bottom: 2rem;">We start an endless loop and use Tokio=92s&nbsp;<cod=
e class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo=
, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, m=
onospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71=
); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span cla=
ss=3D"kwd" style=3D"box-sizing: inherit;">select</span><span class=3D"pun" =
style=3D"box-sizing: inherit;">!</span></code>&nbsp;macro to race multiple =
async functions.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margi=
n-bottom: 2rem;">This means whichever one of these finishes first will get =
handled first and then we start anew.</p><p style=3D"box-sizing: inherit; m=
argin-top: 0px; margin-bottom: 2rem;">The first event emitter is our buffer=
ed reader, which will give us input lines from the user. If we get one, we =
create an&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit;=
 font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;C=
ourier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; col=
or: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius: =
0.25rem;"><span class=3D"typ" style=3D"box-sizing: inherit;">EventType</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit;">::</span><span class=
=3D"typ" style=3D"box-sizing: inherit;">Input</span></code>&nbsp;with the l=
ine.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2r=
em;">Then, we listen to the response channel and the init channel, creating=
 their events respectively.<br style=3D"box-sizing: inherit;">And if events=
 come in on the swarm itself, this means they are events that are neither h=
andled by our Mdns behavior nor our FloodSub behavior and we just log them.=
 They=92re mostly noise, such as connection/disconnection in our case, but =
helpful for debugging.</p><p style=3D"box-sizing: inherit; margin-top: 0px;=
 margin-bottom: 2rem;">With the corresponding events created (or no event c=
reated), we go about handling them.</p><p style=3D"box-sizing: inherit; mar=
gin-top: 0px; margin-bottom: 2rem;">For our&nbsp;<code class=3D" prettyprin=
ted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &q=
uot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 1=
6.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: r=
gb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" style=3D"bo=
x-sizing: inherit;">Init</span></code>&nbsp;event, we call&nbsp;<code class=
=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monac=
o, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospac=
e; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); back=
ground-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"p=
ln" style=3D"box-sizing: inherit;">genesis</span><span class=3D"pun" style=
=3D"box-sizing: inherit;">()</span></code>&nbsp;on our app, creating our ge=
nesis block. If we=92re connected to nodes, we trigger a&nbsp;<code class=
=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monac=
o, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospac=
e; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); back=
ground-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"t=
yp" style=3D"box-sizing: inherit;">LocalChainRequest</span></code>&nbsp;to =
the last one in the list.</p><p style=3D"box-sizing: inherit; margin-top: 0=
px; margin-bottom: 2rem;">Obviously, here it would make sense to ask multip=
le nodes, and maybe multiple times, and select the best (i.e., longest) cha=
in of the responses we get. But for simplicity=92s sake, we just ask one an=
d accept whatever they send us.</p><p style=3D"box-sizing: inherit; margin-=
top: 0px; margin-bottom: 2rem;">Then, if we get a&nbsp;<code class=3D" pret=
typrinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consol=
as, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-s=
ize: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-co=
lor: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"typ" style=
=3D"box-sizing: inherit;">LocalChainResponse</span></code>&nbsp;event, that=
 means something was sent on the response channel. If you remember above, t=
hat happened in our FloodSub behavior when we sent back our local blockchai=
n to a requesting node. Here, we actually send the incoming JSON to the cor=
rect FloodSub topic, so it=92s broadcast to the network.</p><p style=3D"box=
-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Finally, for user =
input, we have three commands:</p><ul style=3D"box-sizing: border-box; marg=
in-top: 0px; margin-bottom: 2rem;"><li style=3D"box-sizing: inherit;"><code=
 class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo,=
 Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, mo=
nospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71)=
; background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span clas=
s=3D"pln" style=3D"box-sizing: inherit;">ls p</span></code>&nbsp;lists all =
peers</li><li style=3D"box-sizing: inherit;"><code class=3D" prettyprinted"=
 style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;=
Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2p=
x; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(2=
47, 247, 249); border-radius: 0.25rem;"><span class=3D"pln" style=3D"box-si=
zing: inherit;">ls c</span></code>&nbsp;prints the local blockchain</li><li=
 style=3D"box-sizing: inherit;"><code class=3D" prettyprinted" style=3D"box=
-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mo=
no&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0=
.2rem 0.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249)=
; border-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit=
;">create b $data</span></code>&nbsp;creates a new block with&nbsp;<code cl=
ass=3D" prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Mo=
naco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monos=
pace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); b=
ackground-color: rgb(247, 247, 249); border-radius: 0.25rem;"><span class=
=3D"pln" style=3D"box-sizing: inherit;">$data</span></code>&nbsp;as it=92s =
string content</li></ul><p style=3D"box-sizing: inherit; margin-top: 0px; m=
argin-bottom: 2rem;">Each command calls one of these helper functions:</p><=
pre class=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit=
; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;=
Courier New&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-bo=
ttom: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padd=
ing: 0.5em; background: rgb(237, 237, 237) !important;"><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">pub fn get_list_peers<=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);">swarm</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">&amp;</span><span class=3D"typ" styl=
e=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Swarm</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">-&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; colo=
r: rgb(102, 0, 102);">Vec</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"Discovered Peers:"</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> nodes </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);"> swarm</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">behaviour</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
().</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">mdns</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);">discovered_nodes</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">();</span><span class=3D"pl=
n" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut unique_peers </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"ty=
p" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">HashSet</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:=
:</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, =
136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">();</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> peer </span><span class=3D"kwd" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 136);">in</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> nodes </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        unique_peers</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">insert</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">peer</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
    unique_peers</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">iter</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">().</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">map</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(|</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">|=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> p</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">to_string</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">()).</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">collect</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

pub fn handle_print_peers</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&amp;</spa=
n><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102)=
;">Swarm</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> peers </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);"> get_list_peers</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">swarm</s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">
    peers</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">iter</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">().</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">for_each</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(|</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">|</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; c=
olor: rgb(0, 136, 0);">"{}"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> p</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">));</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

pub fn handle_print_chain</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&amp;</spa=
n><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102)=
;">Swarm</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"Local Blockchain:"</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> pretty_json </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        serde_json</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">to_string_pretty</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(&amp;</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">swarm</sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">behaviour</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">().</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">blocks</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">).</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expe=
ct</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inherit; color: =
rgb(0, 136, 0);">"can jsonify blocks"</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"{}"</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> pretty_json</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

pub fn handle_create_block</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">cmd</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&amp;</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">s=
tr</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);"> swarm</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">mut </span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Swarm</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizi=
ng: inherit; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">data</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> <=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);"> cmd</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">strip_prefix</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"s=
tr" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"create b"</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> behaviour </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> swarm</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">behaviour=
_mut</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">();</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> latest_block </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> behaviour
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">app
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">blocks
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">last</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D=
"box-sizing: inherit; color: rgb(0, 136, 0);">"there is at least one block"=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> block </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" styl=
e=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Block</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><=
span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">ne=
w</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
            latest_block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">id </span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">+</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D=
"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">1</span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>
            latest_block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">hash</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">clone</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>
            data</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">to_owned</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">(),</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> json </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_strin=
g</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"=
str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"can jsonify req=
uest"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
        behaviour</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">push</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">block</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">
        info</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inher=
it; color: rgb(0, 136, 0);">"broadcasting new block"</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        behaviour
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">floodsub
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">publish</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">BLOCK_TOPIC</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">clon=
e</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">(),</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> json</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">as_bytes</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">());</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">Listing clients and printing the blockchain is rather st=
raightforward. Creating a block is more interesting.</p><p style=3D"box-siz=
ing: inherit; margin-top: 0px; margin-bottom: 2rem;">In that case, we use&n=
bsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-famil=
y: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&=
quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189=
, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><=
span class=3D"typ" style=3D"box-sizing: inherit;">Block</span><span class=
=3D"pun" style=3D"box-sizing: inherit;">::</span><span class=3D"kwd" style=
=3D"box-sizing: inherit;">new</span></code>&nbsp;to create (and mine) a new=
 block. Once that happens, we JSONify it and broadcast it to the network so=
 others may add it to their chain.</p><p style=3D"box-sizing: inherit; marg=
in-top: 0px; margin-bottom: 2rem;">This where we would put some logic for r=
-trying this. For example, we could add it to a queue and see whether, afte=
r a while, our block propagates to the widely agreed-upon blockchain and, i=
f not, get a new copy of the agreed-on chain and mine it again to get it on=
 there. As mentioned above, this design certainly won=92t scale to many nod=
es mining their blocks all the time, but that=92s OK for the purpose of thi=
s tutorial.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bot=
tom: 2rem;">Let=92s start it and see if it works!</p><h2 id=3D"testing-our-=
rust-blockchain" style=3D"box-sizing: inherit; margin-top: 0px; margin-bott=
om: 1.5rem; font-family: &quot;PT Sans&quot;; line-height: 1.1; color: rgb(=
17, 17, 17); font-size: 2rem;">Testing our Rust blockchain</h2><p style=3D"=
box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">We can start th=
e application using&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing=
: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot=
;, &quot;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0=
.4rem; color: rgb(189, 65, 71); background-color: rgb(247, 247, 249); borde=
r-radius: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">RUST=
_LOG</span><span class=3D"pun" style=3D"box-sizing: inherit;">=3D</span><sp=
an class=3D"pln" style=3D"box-sizing: inherit;">info cargo run</span></code=
>. It=92s best to actually start multiple instances of it in different term=
inal windows.</p><p style=3D"box-sizing: inherit; margin-top: 0px; margin-b=
ottom: 2rem;">For example, we can start two nodes:</p><pre class=3D"languag=
e-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo=
, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, m=
onospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; overflow=
: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; backgrou=
nd: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">INFO  rust_blockchain_example </span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(10=
2, 0, 102);">Peer</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inher=
it; color: rgb(102, 0, 102);">Id</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" =
style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">12D3KooWJWbGzpdakrD=
roXuCKPRBqmDW8wYc1U3WzWEydVr2qZNv</span></pre><p style=3D"box-sizing: inher=
it; margin-top: 0px; margin-bottom: 2rem;">And:</p><pre class=3D"language-r=
ust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, M=
onaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, mono=
space; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; overflow: a=
uto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; background:=
 rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">INFO  rust_blockchain_example </span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, =
0, 102);">Peer</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit;=
 color: rgb(102, 0, 102);">Id</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=
=3D"box-sizing: inherit; color: rgb(0, 102, 102);">12D3KooWSXGZJJEnh3tndGEV=
m6ACQ5pdaPKL34ktmCsUqkqSVTWX</span></pre><p style=3D"box-sizing: inherit; m=
argin-top: 0px; margin-bottom: 2rem;">Using&nbsp;<code class=3D" prettyprin=
ted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &q=
uot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 1=
6.2px; padding: 0.2rem 0.4rem; color: rgb(189, 65, 71); background-color: r=
gb(247, 247, 249); border-radius: 0.25rem;"><span class=3D"pln" style=3D"bo=
x-sizing: inherit;">ls p</span></code>&nbsp;in the second app shows us the =
connection to the first one:</p><pre class=3D"language-rust hljs prettyprin=
ted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &q=
uot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 1=
6.2px; margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77,=
 77, 76); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237)=
 !important;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">INFO  rust_blockchain_example</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> =
</span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0,=
 102);">Discovered</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inhe=
rit; color: rgb(102, 0, 102);">Peers</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">12=
D3KooWJWbGzpdakrDroXuCKPRBqmDW8wYc1U3WzWEydVr2qZNv</span></pre><p style=3D"=
box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Then, we can us=
e&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-fa=
mily: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier N=
ew&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(=
189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;=
"><span class=3D"pln" style=3D"box-sizing: inherit;">ls c</span></code>&nbs=
p;to print the genesis block:</p><pre class=3D"language-rust hljs prettypri=
nted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &=
quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: =
16.2px; margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77=
, 77, 76); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237=
) !important;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);">INFO  rust_blockchain_example</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102,=
 0, 102);">Local</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inheri=
t; color: rgb(102, 0, 102);">Blockchain</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">[<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">0</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a64fb40c946=
b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"genesis"</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664658</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"genesis!"</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">2836</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">]</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">So far, so good. let=92s create a block:</p><pre class=
=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-fa=
mily: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier N=
ew&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2re=
m; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5e=
m; background: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">create b hello
 INFO  rust_blockchain_example      </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> mining block</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">..=
.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);">
 INFO  rust_blockchain_example      </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> nonce</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </s=
pan><span class=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 10=
2);">0</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);">
 INFO  rust_blockchain_example      </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> mined</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> non=
ce</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: inherit; co=
lor: rgb(0, 102, 102);">62235</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> hash</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">00008=
cf68da9f978aa080b7aad93fb4285e3c0dbd85fc21bc7e83e623f9fa922</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> bi=
nary hash</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: inhe=
rit; color: rgb(0, 102, 102);">00100011001111011010001101101010011111100111=
110001010101010001011111101010101101100100111111101110000101000010111100011=
110000001101101111011000101111111000010110111100011111101000111110110001011=
11111001111110101001100010</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> broadcasti=
ng </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 136);">new</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> block</span></pre><p style=3D"box-sizing: inherit; margin-=
top: 0px; margin-bottom: 2rem;">On the first node, we see this:</p><pre cla=
ss=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-=
family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier=
 New&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2=
rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.=
5em; background: rgb(237, 237, 237) !important;"><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">INFO  rust_blockchain_exampl=
e</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">::</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">p2p </span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> received </span><span class=3D"kwd" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> block </span><sp=
an class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">from=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"lit" style=3D"box-sizing: inherit; color: rgb(0,=
 102, 102);">12D3KooWSXGZJJEnh3tndGEVm6ACQ5pdaPKL34ktmCsUqkqSVTWX</span></p=
re><p style=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">=
And calling&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inheri=
t; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot=
;Courier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; c=
olor: rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius=
: 0.25rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">ls c</span><=
/code>:</p><pre class=3D"language-rust hljs prettyprinted" style=3D"box-siz=
ing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&q=
uot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; margin-top: 0p=
x; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height:=
 500px; padding: 0.5em; background: rgb(237, 237, 237) !important;"><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">INFO  rust=
_blockchain_example</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D=
"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Local</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </s=
pan><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 10=
2);">Blockchain</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">[<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">0</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a64fb40c946=
b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"genesis"</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664655</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"genesis!"</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">2836</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">1</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"00008cf68da9f978aa080b7aad93fb4285e3c0=
dbd85fc21bc7e83e623f9fa922"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a6=
4fb40c946b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664772</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">" hello"</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">62235</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">]</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">The block got added!</p><p style=3D"box-sizing: inherit;=
 margin-top: 0px; margin-bottom: 2rem;">Let=92s start a third node. It shou=
ld automatically get this updated chain because it=92s longer than its own =
(only the genesis block).</p><pre class=3D"language-rust hljs prettyprinted=
" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot=
;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2=
px; margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77=
, 76); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !i=
mportant;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">INFO  rust_blockchain_example </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Peer</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> <=
/span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, =
102);">Id</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: inhe=
rit; color: rgb(0, 102, 102);">12D3KooWSDyn83pJD4eEg9dvYffceAEcbUkioQvSPY7a=
Ci7J598q</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);">

 INFO  rust_blockchain_example </span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> sending init </span><span c=
lass=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">event</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Di=
scovered</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color=
: rgb(102, 0, 102);">Peers</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example      </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> connected nodes</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>:</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);"> </span><span class=3D"lit" style=3D"box-sizing: inherit; color: rgb(=
0, 102, 102);">2</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Re=
sponse</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 136);">from</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: i=
nherit; color: rgb(0, 102, 102);">12D3KooWSXGZJJEnh3tndGEVm6ACQ5pdaPKL34ktm=
CsUqkqSVTWX</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Bl=
ock</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> id</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"b=
ox-sizing: inherit; color: rgb(0, 102, 102);">0</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hash</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0,=
 136, 0);">"0000f816a87f806bb0073dcf026a64fb40c946b5abee2573702828694d5b4c4=
3"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);"> previous_hash</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=
=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"genesis"</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> tim=
estamp</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: inherit=
; color: rgb(0, 102, 102);">1636664658</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> data</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);=
">"genesis!"</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> nonce</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" sty=
le=3D"box-sizing: inherit; color: rgb(0, 102, 102);">2836</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">}</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Bl=
ock</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> id</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"b=
ox-sizing: inherit; color: rgb(0, 102, 102);">1</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hash</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0,=
 136, 0);">"00008cf68da9f978aa080b7aad93fb4285e3c0dbd85fc21bc7e83e623f9fa92=
2"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);"> previous_hash</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=
=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf0=
26a64fb40c946b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> timestamp</span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
> </span><span class=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 10=
2, 102);">1636664772</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> data</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"s=
tr" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">" hello"</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> nonce</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: inh=
erit; color: rgb(0, 102, 102);">62235</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">}</span></pre><p style=
=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">After sendi=
ng the&nbsp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; fo=
nt-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Cour=
ier New&quot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color:=
 rgb(189, 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.2=
5rem;"><span class=3D"pln" style=3D"box-sizing: inherit;">init</span></code=
>&nbsp;event, we requested the second node=92s chain and got it.</p><p styl=
e=3D"box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">Calling&nb=
sp;<code class=3D" prettyprinted" style=3D"box-sizing: inherit; font-family=
: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&q=
uot;, monospace; font-size: 16.2px; padding: 0.2rem 0.4rem; color: rgb(189,=
 65, 71); background-color: rgb(247, 247, 249); border-radius: 0.25rem;"><s=
pan class=3D"pln" style=3D"box-sizing: inherit;">ls c</span></code>&nbsp;he=
re shows us the same chain:</p><pre class=3D"language-rust hljs prettyprint=
ed" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &qu=
ot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16=
.2px; margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, =
77, 76); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) =
!important;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);">INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> <=
/span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, =
102);">Local</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">Blockchain</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">[<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">0</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a64fb40c946=
b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"genesis"</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664658</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"genesis!"</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">2836</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">1</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"00008cf68da9f978aa080b7aad93fb4285e3c0=
dbd85fc21bc7e83e623f9fa922"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a6=
4fb40c946b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664772</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">" hello"</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">62235</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">]</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">Creating a block also works:</p><pre class=3D"language-r=
ust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, M=
onaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, mono=
space; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; overflow: a=
uto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; background:=
 rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">create b alsoworks
 INFO  rust_blockchain_example      </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> mining block</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">..=
.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);">
 INFO  rust_blockchain_example      </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> nonce</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </s=
pan><span class=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 10=
2);">0</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);">
 INFO  rust_blockchain_example      </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> mined</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> non=
ce</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: inherit; co=
lor: rgb(0, 102, 102);">34855</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> hash</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">0000e=
0bddf4e603da675b92b88e86e25692eaaa8ad20db6ecab5940bdee1fdfd</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> bi=
nary hash</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: inhe=
rit; color: rgb(0, 102, 102);">00111000001011110111011111100111011000001111=
011010011011101011011100110101110001000111010001101110100101110100110111010=
101010101010001010110110000011011011110111011001010101101011001010010111101=
1110111000011111110111111101</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> broadcasti=
ng </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 136);">new</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> block</span></pre><p style=3D"box-sizing: inherit; margin-=
top: 0px; margin-bottom: 2rem;">Node 1:</p><pre class=3D"language-rust hljs=
 prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, C=
onsolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; f=
ont-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; overflow: auto; col=
or: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; background: rgb(237=
, 237, 237) !important;"><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> INFO  rust_blockchain_example</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> received </span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">new</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> block </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">from</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span clas=
s=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">12D3KooWS=
Dyn83pJD4eEg9dvYffceAEcbUkioQvSPY7aCi7J598q</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

ls c
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Lo=
cal</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Blockchain</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">[<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">0</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a64fb40c946=
b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"genesis"</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664658</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"genesis!"</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">2836</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">1</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"00008cf68da9f978aa080b7aad93fb4285e3c0=
dbd85fc21bc7e83e623f9fa922"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a6=
4fb40c946b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664772</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">" hello"</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">62235</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">2</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"0000e0bddf4e603da675b92b88e86e25692eaa=
a8ad20db6ecab5940bdee1fdfd"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"00008cf68da9f978aa080b7aad93f=
b4285e3c0dbd85fc21bc7e83e623f9fa922"</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664920</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">" alsoworks"</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">34855</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">]</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">Node 2:</p><pre class=3D"language-rust hljs prettyprinte=
d" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quo=
t;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.=
2px; margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 7=
7, 76); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !=
important;"><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);"> INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> r=
eceived </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">new</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> block </span><span class=3D"kwd" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 136);">from</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=
=3D"box-sizing: inherit; color: rgb(0, 102, 102);">12D3KooWSDyn83pJD4eEg9dv=
YffceAEcbUkioQvSPY7aCi7J598q</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">
ls c
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Lo=
cal</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Blockchain</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
 INFO  rust_blockchain_example</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">p2p </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">[<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">0</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a64fb40c946=
b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"genesis"</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664655</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"genesis!"</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">2836</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">1</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"00008cf68da9f978aa080b7aad93fb4285e3c0=
dbd85fc21bc7e83e623f9fa922"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a6=
4fb40c946b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664772</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">" hello"</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">62235</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">2</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"hash"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"0000e0bddf4e603da675b92b88e86e25692eaa=
a8ad20db6ecab5940bdee1fdfd"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"00008cf68da9f978aa080b7aad93f=
b4285e3c0dbd85fc21bc7e83e623f9fa922"</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-=
sizing: inherit; color: rgb(0, 102, 102);">1636664920</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">" alsoworks"</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, =
136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">34855</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
  </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">]</span></pre><p style=3D"box-sizing: inherit; margin-top: 0px; mar=
gin-bottom: 2rem;">Great =97 it works!</p><p style=3D"box-sizing: inherit; =
margin-top: 0px; margin-bottom: 2rem;">You can play around and try to creat=
e race conditions (e.g., by increasing the difficulty to three zeros and st=
arting multiple blocks in multiple nodes. You=92ll immediately notice some =
of the flaws of this design, but the basics work. We have a peer-to-peer bl=
ockchain application, a real decentralized ledger with basic robustness, bu=
ilt entirely from scratch in Rust. Awesome!</p><p style=3D"box-sizing: inhe=
rit; margin-top: 0px; margin-bottom: 2rem;">You can find the full example c=
ode at&nbsp;<a href=3D"https://github.com/zupzup/rust-blockchain-example" t=
arget=3D"_blank" rel=3D"noopener" style=3D"box-sizing: inherit; color: rgb(=
118, 74, 188); text-decoration-line: none; touch-action: manipulation;">Git=
Hub</a>.</p><h2 id=3D"conclusion" style=3D"box-sizing: inherit; margin-top:=
 0px; margin-bottom: 1.5rem; font-family: &quot;PT Sans&quot;; line-height:=
 1.1; color: rgb(17, 17, 17); font-size: 2rem;">Conclusion</h2><p style=3D"=
box-sizing: inherit; margin-top: 0px; margin-bottom: 2rem;">In this tutoria=
l, we built a simple, quite limited, but working blockchain application in =
Rust. Our blockchain app has a very basic mining scheme, consensus, and pee=
r-to-peer networking in just 500 lines of Rust.</p><p style=3D"box-sizing: =
inherit; margin-top: 0px; margin-bottom: 2rem;">Most of this simplicity is =
thanks to the fantastic&nbsp;<a href=3D"https://github.com/libp2p/rust-libp=
2p" target=3D"_blank" rel=3D"noopener" style=3D"box-sizing: inherit; color:=
 rgb(118, 74, 188); text-decoration-line: none; touch-action: manipulation;=
">libp2p</a>&nbsp;library, which does all the heavy lifting in terms of net=
working. Clearly, as is always the case in software engineering tutorials, =
for a production-grade blockchain-application, there are many, many more th=
ings to consider and get right.</p><p style=3D"box-sizing: inherit; margin-=
top: 0px; margin-bottom: 2rem;">However, this exercise sets the stage for t=
he topic, explaining some of the basics and showing them off in Rust, so th=
at we can continue this journey by looking at how we would go about buildin=
g a blockchain application that could actually be used in practice with a f=
ramework such as&nbsp;<a href=3D"https://github.com/paritytech/substrate" t=
arget=3D"_blank" rel=3D"noopener" style=3D"box-sizing: inherit; color: rgb(=
118, 74, 188); text-decoration-line: none; touch-action: manipulation;">Sub=
strate</a>.</p></article></div><div class=3D"container" style=3D"box-sizing=
: inherit; position: relative; margin-left: auto; margin-right: auto; paddi=
ng-right: 15px; padding-left: 15px; width: 960px; max-width: 100%; color: r=
gb(102, 102, 102); font-family: &quot;PT Sans&quot;; font-size: 15px;"><foo=
ter class=3D"footer" style=3D"box-sizing: inherit; padding-top: 15px; paddi=
ng-bottom: 12px; font-size: 0.8rem; color: rgba(0, 0, 0, 0.44); margin-top:=
 30px; border-top: 1px solid rgba(0, 0, 0, 0.05) !important;"><div class=3D=
"footerRight" style=3D"box-sizing: inherit;"><div class=3D"white" style=3D"=
box-sizing: inherit; position: relative !important; background: rgb(255, 25=
5, 255); border: 0px solid rgb(240, 240, 240); border-radius: 20px; padding=
: 0px;"><div id=3D"sample_slider" class=3D"owl-carousel sa_owl_theme owl-pa=
gination-true owl-loaded" data-slider-id=3D"sample_slider" style=3D"box-siz=
ing: inherit; width: 930px; -webkit-tap-highlight-color: transparent; posit=
ion: relative; z-index: 1; visibility: visible; margin-bottom: 22px !import=
ant;"><div class=3D"owl-dots" style=3D"box-sizing: inherit; position: absol=
ute; width: 930px; padding: 10px 0px 0px !important; bottom: -22px !importa=
nt; text-align: center !important; font-size: 12px !important; line-height:=
 12px !important;"><button role=3D"button" class=3D"owl-dot" style=3D"box-s=
izing: inherit; font: inherit; margin: 0px; overflow: visible; appearance: =
button; touch-action: manipulation; cursor: pointer; user-select: none; bac=
kground-image: initial; background-position: 0px 0px; background-size: init=
ial; background-repeat: initial; background-attachment: initial; background=
-origin: initial; background-clip: initial; border-width: initial; border-s=
tyle: none; border-color: initial; padding: 0px !important;"><span style=3D=
"box-sizing: inherit; display: inline-block !important; border-style: none =
!important; background-color: rgba(0, 0, 0, 0.2) !important; width: 10px !i=
mportant; height: 10px !important; border-radius: 50% !important; margin: 0=
px 3px !important; transition: all 0.3s ease-in-out 0s !important;"></span>=
</button></div></div></div></div><div class=3D"clearfix" style=3D"box-sizin=
g: inherit;"></div><a href=3D"https://blog.logrocket.com/how-to-build-a-blo=
ckchain-in-rust/" class=3D"back-to-top hidden-md-down" style=3D"box-sizing:=
 inherit; color: rgb(118, 74, 188); text-decoration-line: none; touch-actio=
n: manipulation; margin: 0px; position: fixed; bottom: 80px; right: 40px; w=
idth: 40px; height: 40px; line-height: 40px; text-align: center; border-rad=
ius: 50%; border: 1px solid rgba(0, 0, 0, 0.18); z-index: 100; display: inl=
ine;"><span class=3D"fa fa-angle-up" style=3D"box-sizing: inherit; font-var=
iant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal=
; font-size: 20px; line-height: 1; font-family: FontAwesome; -webkit-font-s=
moothing: antialiased; display: inline-block; text-rendering: auto; color: =
rgba(0, 0, 0, 0.3);"></span></a></footer></div><iframe id=3D"intercom-frame=
" aria-hidden=3D"true" tabindex=3D"-1" title=3D"Intercom" style=3D"box-sizi=
ng: inherit; max-width: 100%; color: rgb(102, 102, 102); font-family: &quot=
;PT Sans&quot;; font-size: 15px; pointer-events: none; position: absolute !=
important; opacity: 0 !important; width: 1px !important; height: 1px !impor=
tant; top: 0px !important; left: 0px !important; border-width: initial !imp=
ortant; border-style: none !important; display: block !important; z-index: =
-1 !important;"></iframe></div></body></html>
------MultipartBoundary--fIudxcqF42MSSJ7wXns7rvf0TX5nXHFsNF0GQEIUve----
Content-Type: image/avif
Content-Transfer-Encoding: base64
Content-Location: https://blog.logrocket.com/wp-content/uploads/2020/01/logrocket-blog-logo.png

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

------MultipartBoundary--fIudxcqF42MSSJ7wXns7rvf0TX5nXHFsNF0GQEIUve----
Content-Type: text/html
Content-ID: <frame-337B08E73BBD351835582D34081D9322@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--fIudxcqF42MSSJ7wXns7rvf0TX5nXHFsNF0GQEIUve------
