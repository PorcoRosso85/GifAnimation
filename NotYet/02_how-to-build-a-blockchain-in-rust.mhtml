From: <Saved by Blink>
Snapshot-Content-Location: data:text/html, <html contenteditable>
Subject: 
Date: Sun, 7 Aug 2022 23:33:22 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--pXmkTxenWTr4SD3sO30EkBGvubMVG2VnKAch2EVFiw----"


------MultipartBoundary--pXmkTxenWTr4SD3sO30EkBGvubMVG2VnKAch2EVFiw----
Content-Type: text/html
Content-ID: <frame-C7F26E69CF6BC2295AA5CBD9CAEDBF5F@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: data:text/html, <html contenteditable>

<html contenteditable=3D""><head><meta http-equiv=3D"Content-Type" content=
=3D"text/html; charset=3Dwindows-1252"></head><body><div>https://blog.logro=
cket.com/how-to-build-a-blockchain-in-rust/</div><div><br></div><div><table=
 style=3D"border: 1px solid rgb(204, 204, 204); border-collapse: collapse; =
margin: 0px; padding: 0px; width: 1904px; color: rgb(0, 0, 0); font-family:=
 &quot;Open Sans&quot;, sans-serif;"><tbody><tr style=3D"background-color: =
rgb(255, 255, 255); border: 1px solid rgb(221, 221, 221); padding: 0.35em; =
vertical-align: top;"><td style=3D"padding: 0.625em;"><pre style=3D"font-si=
ze: 16px; position: relative;"><code class=3D"language-rust ignore hljs" st=
yle=3D"font-size: 0.875em; display: block; overflow-x: auto; background: rg=
b(246, 247, 246); padding: 0.5em; font-family: &quot;Source Code Pro&quot;,=
 Consolas, &quot;Ubuntu Mono&quot;, Menlo, &quot;DejaVu Sans Mono&quot;, mo=
nospace, monospace !important;"><pre class=3D"language-rust hljs prettyprin=
ted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &q=
uot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 1=
6.2px; margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77,=
 77, 76); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237)=
 !important;"><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">[</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">dependencies</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">]</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
chrono </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: inhe=
rit; color: rgb(0, 136, 0);">"0.4"</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
sha2 </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: inheri=
t; color: rgb(0, 136, 0);">"0.9.8"</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
serde </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">version </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span cla=
ss=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"1.0"</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);"> features </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">[</span><span class=3D"str" style=
=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"derive"</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">]</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">
serde_json </span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: =
inherit; color: rgb(0, 136, 0);">"1.0"</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">
libp2p </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> version </span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"0.39"<=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> features </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">[</span><span class=3D"str" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"tcp-tokio"</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 1=
36, 0);">"mdns"</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">]</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">
tokio </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> version </span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"1.0"</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> features </span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">[</span><span class=3D"str" st=
yle=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"io-util"</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> =
</span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136,=
 0);">"io-std"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing:=
 inherit; color: rgb(0, 136, 0);">"macros"</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"rt"</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);"> </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0=
, 136, 0);">"rt-multi-thread"</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=
=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"sync"</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);=
">"time"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">]</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
hex </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: inherit=
; color: rgb(0, 136, 0);">"0.4"</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
once_cell </span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"1.5"</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">
log </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizing: inherit=
; color: rgb(0, 136, 0);">"0.4"</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
pretty_env_logger </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-s=
izing: inherit; color: rgb(0, 136, 0);">"0.4"</span></pre><div><span class=
=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);"><br></span><=
/div></code></pre></td><td style=3D"padding: 0.625em;"><pre class=3D"langua=
ge-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: Menl=
o, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, =
monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; overflo=
w: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; backgro=
und: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">pub </span><span class=3D"kwd" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 136);">struct</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">App</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">
    pub blocks</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing:=
 inherit; color: rgb(102, 0, 102);">Vec</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

</span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0,=
 0);">#[derive(Serialize, Deserialize, Debug, Clone)]</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">struct</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inheri=
t; color: rgb(102, 0, 102);">Block</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub id</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> u64</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
    pub hash</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: i=
nherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub previous_hash</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-=
sizing: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub timestamp</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> i64</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub data</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: i=
nherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub nonce</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> u64</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><div><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);"><br></span></div></td><td style=3D"padding: 0.6=
25em;"><pre class=3D"language-rust hljs prettyprinted" style=3D"box-sizing:=
 inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;=
, &quot;Courier New&quot;, monospace; font-size: 16.2px; margin-top: 0px; m=
argin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500=
px; padding: 0.5em; background: rgb(237, 237, 237) !important;"><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">impl </span><s=
pan class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">A=
pp</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">
    fn </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ"=
 style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Self</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">
        </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Self</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> blocks</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> vec</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">![]</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">

    fn genesis</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> genesis_block </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"t=
yp" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Block</span><sp=
an class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">
            id</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing:=
 inherit; color: rgb(0, 102, 102);">0</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            timestamp</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-=
sizing: inherit; color: rgb(102, 0, 102);">Utc</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">now</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">().=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">timestamp</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);">
            previous_hash</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span=
 class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">from</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">(</span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(=
0, 136, 0);">"genesis"</span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">),</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);">
            data</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D=
"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">from</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</=
span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0=
);">"genesis!"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">),</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);">
            nonce</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">2836</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            hash</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"0000f816a87f806bb0073dcf026a64fb40c946=
b5abee2573702828694d5b4c43"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">to_string</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">};</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">push</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">genesis_=
block</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><div><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);"><br></span></div></td><td style=3D"padding: 0.6=
25em;"></td><td style=3D"padding: 0.625em;"></td><td style=3D"padding: 0.62=
5em;"><pre class=3D"language-rust hljs prettyprinted" style=3D"box-sizing: =
inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;,=
 &quot;Courier New&quot;, monospace; font-size: 16.2px; margin-top: 0px; ma=
rgin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500p=
x; padding: 0.5em; background: rgb(237, 237, 237) !important;"><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">impl </span><s=
pan class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">A=
pp</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    fn try_add_block</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> block</s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: =
rgb(102, 0, 102);">Block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> latest_block </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kw=
d" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">b=
locks</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">.</span><span class=3D"kwd" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 136);">last</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">().</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D=
"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"there is at le=
ast one block"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">is_block_valid</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(&amp;</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>block</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> latest_block</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">push</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">bl=
ock</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            error</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: =
inherit; color: rgb(0, 136, 0);">"could not add block - invalid"</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><div><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);"><br></span></div></td><td style=3D"padding: 0.6=
25em;"><pre class=3D"language-rust hljs prettyprinted" style=3D"box-sizing:=
 inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;=
, &quot;Courier New&quot;, monospace; font-size: 16.2px; margin-top: 0px; m=
argin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500=
px; padding: 0.5em; background: rgb(237, 237, 237) !important;"><span class=
=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">const</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> DI=
FFICULTY_PREFIX</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">str </span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"0=
0"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">

fn hash_to_binary_representation</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">hash</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&a=
mp;[</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">u8</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">])</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">String</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut res</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> <=
/span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, =
102);">String</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 136);">default</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">();</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> c </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">in</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> hash </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        res</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);">push_str</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">format</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!(</span><=
span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"{=
:b}"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> c</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">));</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
    res
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

impl </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(10=
2, 0, 102);">App</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    fn is_block_valid</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"kwd" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> block</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">&amp;</span><span class=3D"typ" style=3D"box-sizing: inherit; co=
lor: rgb(102, 0, 102);">Block</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> previous_block</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">&amp;</span><span class=3D"typ" style=3D"box-sizing: inherit; color: rg=
b(102, 0, 102);">Block</span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D=
"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">bool</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> block</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">previous_hash </span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!=3D</span><sp=
an class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> previ=
ous_block</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">hash </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
            warn</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"block with id: {} has wrong previous hash"=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);"> block</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">hash_to_bina=
ry_representation</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">hex</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">decode</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(&amp;</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">bloc=
k</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">hash</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"can decode from hex"<=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">),</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">starts_with</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">DIFFICULTY_PREFIX</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
            warn</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"block with id: {} has invalid difficulty"<=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> block</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> block</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">id </=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">!=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);"> previous_block</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">id </span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">+</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span cla=
ss=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">1</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">
            warn</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
                </span><span class=3D"str" style=3D"box-sizing: inherit; co=
lor: rgb(0, 136, 0);">"block with id: {} is not the next block after the la=
test: {}"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
                block</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> previous_block</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">id
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hex</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">encode</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">calculate_hash</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
            block</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            block</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">timestamp</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">block</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">previous_hash</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">block</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">data</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            block</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">nonce</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">))</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">!=3D</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);"> block</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">hash
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
            warn</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"block with id: {} has invalid hash"</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);"> block</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">true</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span></pre></td><td style=3D"padding: 0.625em;"><pre style=3D"=
position: relative; font-size: 16px;"><div><pre class=3D"language-rust hljs=
 prettyprinted" style=3D"box-sizing: inherit; font-family: Menlo, Monaco, C=
onsolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; f=
ont-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; overflow: auto; col=
or: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; background: rgb(237=
, 237, 237) !important;"><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">impl </span><span class=3D"typ" style=3D"box-sizing: =
inherit; color: rgb(102, 0, 102);">App</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    fn is_chain_valid</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"kwd" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> chain</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">&amp;[</span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">Block</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">])</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">-&gt;</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span=
 class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">bool</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> i </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">in</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"bo=
x-sizing: inherit; color: rgb(0, 102, 102);">0.</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">chain</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">len</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> i </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">=3D=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" =
style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">0</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">continue</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> first </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> chain</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">get</sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">i </span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">-</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizing: in=
herit; color: rgb(0, 102, 102);">1</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span=
 class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"has t=
o exist"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> second </span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> chain</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span=
 class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">get</s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);">i</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D=
"box-sizing: inherit; color: rgb(0, 136, 0);">"has to exist"</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">!</span><span class=3D"kwd" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">is_block_valid</sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">second</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> first</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 136);">false</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">true</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre></div></pre></td><td style=3D"padding: 0.625em;"><pre=
 class=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit; f=
ont-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Cou=
rier New&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-botto=
m: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding=
: 0.5em; background: rgb(237, 237, 237) !important;"><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">impl </span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">App</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">...</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">
    </span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136=
, 0, 0);">// We always choose the longest valid chain</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    fn choose_chain</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">lo=
cal</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">Vec</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> remote</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Vec</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">Vec</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> is_local_valid </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"=
kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>is_chain_valid</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">(&amp;</span><span class=3D"kwd" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 136);">local</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> is_remote_valid </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D=
"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">is_chain_valid</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">remote</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> is_local_valid </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">&amp;&amp;</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> is_remote_valid =
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 136);">local</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">len</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
&gt;=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> remote</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">len</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">local</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                remote
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> is_remote_valid </span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&=
amp;&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">!</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">is_local_valid </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            remote
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">is_remote_va=
lid </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">&amp;&amp;</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> is_local_valid </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">local</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            panic</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: =
inherit; color: rgb(0, 136, 0);">"local and remote chains are both invalid"=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre></td><td style=3D"padding: 0.625em;"><pre class=3D"la=
nguage-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: =
Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quo=
t;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; ove=
rflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; bac=
kground: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">impl </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Block</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub fn </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> u64</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> previous_=
hash</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; =
color: rgb(102, 0, 102);">String</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> data</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><s=
pan class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">S=
tring</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"bo=
x-sizing: inherit; color: rgb(102, 0, 102);">Self</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> now </span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Utc</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">now</sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">();</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">nonce</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hash</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> mine_block</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);">id</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> now</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">times=
tamp</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">(),</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">previous_hash</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&am=
p;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);">data</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);">
        </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Self</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
            id</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">
            hash</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            timestamp</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> now</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">timestamp</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            previous_hash</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
            data</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            nonce</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre></td><td style=3D"padding: 0.625em;"><pre class=3D"la=
nguage-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: =
Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quo=
t;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; ove=
rflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; bac=
kground: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">fn mine_block</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">id</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> u64</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> timestamp</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);"> i64</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> previous_hash=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">str</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> data</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&=
amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">str</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">u64</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </=
span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 1=
02);">String</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"mining block..."</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut nonce </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" styl=
e=3D"box-sizing: inherit; color: rgb(0, 102, 102);">0</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    loop </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> nonce </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">%</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=
=3D"box-sizing: inherit; color: rgb(0, 102, 102);">100000</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D=
=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"lit" style=3D"box-sizing: inherit; color: rgb=
(0, 102, 102);">0</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
            info</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: i=
nherit; color: rgb(0, 136, 0);">"nonce: {}"</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> nonce</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> hash </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> calculate_hash</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">id</s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);"> timestamp</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> previous_hash</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> data</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> nonce</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> binary_hash </span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hash_to_binary_representa=
tion</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">hash</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> binary_hash</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">starts_with</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">DIFF=
ICULTY_PREFIX</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
            info</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">!(</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
                </span><span class=3D"str" style=3D"box-sizing: inherit; co=
lor: rgb(0, 136, 0);">"mined! nonce: {}, hash: {}, binary hash: {}"</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);">
                nonce</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
                hex</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">encode</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">hash</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">),</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                binary_hash
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">return</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">nonce</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> hex</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">encode</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">hash</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">));</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
        nonce </span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">+=3D</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"lit" style=3D"box-sizi=
ng: inherit; color: rgb(0, 102, 102);">1</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre></td><td style=3D"padding: 0.625em;"><pre class=3D"la=
nguage-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: =
Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quo=
t;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; ove=
rflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; bac=
kground: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">fn calculate_hash</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">id</s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);"> u64</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> timestamp</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> i64</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> previou=
s_hash</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">str</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> data</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">str</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> nonce</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> u64</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
-&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: r=
gb(102, 0, 102);">Vec</span><span class=3D"str" style=3D"box-sizing: inheri=
t; color: rgb(0, 136, 0);">&lt;u8&gt;</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> data </span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> serde_json</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">json</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
!({</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"id"</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);"> id</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"previous_hash"</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> previous_hash</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"data"</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> data</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"timestamp"</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> timestamp</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"nonce"</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> nonce
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">});</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut hasher </span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" sty=
le=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Sha256</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span=
><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">=
new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">();</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">
    hasher</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">update</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">data</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_string</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">().</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);">as_bytes</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    hasher</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">finalize</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">().</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">as_slice</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">().</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_=
owned</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre></td><td style=3D"padding: 0.625em;"><pre class=3D"la=
nguage-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: =
Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quo=
t;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; ove=
rflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; bac=
kground: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">pub </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">static</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> KEYS</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(10=
2, 0, 102);">Lazy</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"b=
ox-sizing: inherit; color: rgb(102, 0, 102);">Lazy</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cl=
ass=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">identity</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing: in=
herit; color: rgb(102, 0, 102);">Keypair</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">generate_ed25519</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">static</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> PEER_ID</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Lazy</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102,=
 0, 102);">Lazy</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">(||</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ=
" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">PeerId</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::<=
/span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 13=
6);">from</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">KEYS</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">.</span><span class=3D"kwd" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 136);">public</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()));</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">static</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> CHAIN_TOPIC</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" =
style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Lazy</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Lazy</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">(||</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Topic</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">::</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inhe=
rit; color: rgb(0, 136, 0);">"chains"</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">));</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">static</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> BLOCK_TOPIC</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" =
style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Lazy</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb=
(102, 0, 102);">Lazy</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">(||</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Topic</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">::</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inhe=
rit; color: rgb(0, 136, 0);">"blocks"</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">));</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

</span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0,=
 0);">#[derive(Debug, Serialize, Deserialize)]</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">struct</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inheri=
t; color: rgb(102, 0, 102);">ChainResponse</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub blocks</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing:=
 inherit; color: rgb(102, 0, 102);">Vec</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub receiver</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

</span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0,=
 0);">#[derive(Debug, Serialize, Deserialize)]</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">struct</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inheri=
t; color: rgb(102, 0, 102);">LocalChainRequest</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub from_peer_id</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-s=
izing: inherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">enum</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit;=
 color: rgb(102, 0, 102);">EventType</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102=
, 0, 102);">LocalChainResponse</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">ChainResponse</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">),</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102=
, 0, 102);">Input</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"box-sizing: i=
nherit; color: rgb(102, 0, 102);">String</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">),</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102=
, 0, 102);">Init</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

</span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0,=
 0);">#[derive(NetworkBehaviour)]</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">
pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">struct</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inheri=
t; color: rgb(102, 0, 102);">AppBehaviour</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub floodsub</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">Floodsub</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pub mdns</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: i=
nherit; color: rgb(102, 0, 102);">Mdns</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136=
, 0, 0);">#[behaviour(ignore)]</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    pub response_sender</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"=
typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">UnboundedSende=
r</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
    </span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136=
, 0, 0);">#[behaviour(ignore)]</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    pub init_sender</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"typ" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 0, 102);">UnboundedSender</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">
    </span><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136=
, 0, 0);">#[behaviour(ignore)]</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    pub app</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: in=
herit; color: rgb(102, 0, 102);">App</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre></td><td style=3D"padding: 0.625em;"><pre class=3D"la=
nguage-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-family: =
Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quo=
t;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2rem; ove=
rflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5em; bac=
kground: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">impl </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">AppBehaviour</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);">
    pub </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">async</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> fn </span><span class=3D"kwd" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        app</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: in=
herit; color: rgb(102, 0, 102);">App</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        response_sender</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"=
typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">UnboundedSende=
r</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
        init_sender</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"typ" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 0, 102);">UnboundedSender</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">-&gt;</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box=
-sizing: inherit; color: rgb(102, 0, 102);">Self</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> mut behaviour </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"t=
yp" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Self</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">
            app</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);">
            floodsub</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-s=
izing: inherit; color: rgb(102, 0, 102);">Floodsub</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cl=
ass=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">(*</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">PEER_ID</span><span class=3D"pun" style=3D"box-sizing: inherit; col=
or: rgb(102, 102, 0);">),</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            mdns</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">Mdns</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"=
kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</sp=
an><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102=
);">Default</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">default</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">())</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">.</span><span class=3D"kwd" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 136);">await</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" styl=
e=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"can create mdns"</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
),</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);">
            response_sender</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
            init_sender</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">};</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
        behaviour</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">floodsub</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">subscribe</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">CH=
AIN_TOPIC</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
        behaviour</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">floodsub</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">subscribe</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">BL=
OCK_TOPIC</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">

        behaviour
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><div><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);"><br></span></div></td><td style=3D"padding: 0.6=
25em;"><pre class=3D"language-rust hljs prettyprinted" style=3D"box-sizing:=
 inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;=
, &quot;Courier New&quot;, monospace; font-size: 16.2px; margin-top: 0px; m=
argin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500=
px; padding: 0.5em; background: rgb(237, 237, 237) !important;"><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">impl </span><s=
pan class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">N=
etworkBehaviourEventProcess</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">&lt;</span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">MdnsEvent</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&gt;</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> <=
/span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 13=
6);">for</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color=
: rgb(102, 0, 102);">AppBehaviour</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    fn inject_event</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">ev=
ent</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">MdnsEvent</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        match </span><span class=3D"kwd" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 136);">event</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"typ" style=3D"box-sizing: inherit; color:=
 rgb(102, 0, 102);">MdnsEvent</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">Discovered</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">disco=
vered_list</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> _addr</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 136);">in</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> discovered_list </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">floodsub</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">add_node_to=
_partial_view</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
            </span><span class=3D"typ" style=3D"box-sizing: inherit; color:=
 rgb(102, 0, 102);">MdnsEvent</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">Expired</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expired_=
list</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> _addr</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 136);">in</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> expired_list </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">!</span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">mdns</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">has_node</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">floodsub</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">remov=
e_node_from_partial_view</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">peer</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><div><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);"><br></span></div></td><td style=3D"padding: 0.6=
25em;"><pre class=3D"language-rust hljs prettyprinted" style=3D"box-sizing:=
 inherit; font-family: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;=
, &quot;Courier New&quot;, monospace; font-size: 16.2px; margin-top: 0px; m=
argin-bottom: 2rem; overflow: auto; color: rgb(77, 77, 76); max-height: 500=
px; padding: 0.5em; background: rgb(237, 237, 237) !important;"><span class=
=3D"com" style=3D"box-sizing: inherit; color: rgb(136, 0, 0);">// incoming =
event handler</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
impl </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(10=
2, 0, 102);">NetworkBehaviourEventProcess</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">for</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">AppBe=
haviour</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
    fn inject_event</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">mut </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">ev=
ent</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">FloodsubEvent</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-=
sizing: inherit; color: rgb(102, 0, 102);">FloodsubEvent</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><=
span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">=
Message</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">msg</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"=
kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">event</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"=
box-sizing: inherit; color: rgb(102, 0, 102);">Ok</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">resp</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> serde_json</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">from_slice</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::(&amp;</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">msg</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">data</span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> resp</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">receiver </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D=3D</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">=
 PEER_ID</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">to_string</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    info</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-s=
izing: inherit; color: rgb(0, 136, 0);">"Response from {}:"</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> ms=
g</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">source</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
                    resp</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">iter</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">().</sp=
an><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">=
for_each</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">(|</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">r</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">|</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> info</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!(</span><span class=3D"=
str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"{:?}"</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;"> r</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">));</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">

                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">blocks </span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">choose_chain</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span=
><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">=
self</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">app</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">clone</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> re=
sp</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);">blocks</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pl=
n" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">let</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102=
);">Ok</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">resp</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">from_slice</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">::(&amp;</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">msg</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">data</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">
                info</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"sending local chain to {}"</span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
> msg</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">source</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">to_string</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">());</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> peer_id </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> resp</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">from=
_peer_id</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">;</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 0);"> PEER_ID</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_string</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">=3D=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> peer_id </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" =
style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Err</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">e</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">response_sender</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">send</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">(</span><span class=3D"typ" style=3D"box-sizing: inherit; c=
olor: rgb(102, 0, 102);">ChainResponse</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        blocks</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 136);">self</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">app</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">blocks</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        receiver</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> msg</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">source</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">to_string</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">})</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        error</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"=
box-sizing: inherit; color: rgb(0, 136, 0);">"error sending response via ch=
annel, {}"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> e</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 136);">else</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">if</span><span class=3D"pl=
n" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">let</span><s=
pan class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </sp=
an><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102=
);">Ok</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">from_slice</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">::(&amp;</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">msg</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">data</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
{</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, =
0);">
                info</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizin=
g: inherit; color: rgb(0, 136, 0);">"received new block from {}"</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> msg</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">source</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">to_string</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">());</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">self</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">try_add_block</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">block</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre><pre class=3D"language-rust hljs prettyprinted" style=
=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Libera=
tion Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px; mar=
gin-top: 0px; margin-bottom: 2rem; overflow: auto; max-height: 500px; paddi=
ng: 0.5em; background: rgb(237, 237, 237) !important;"><br></pre></td><td s=
tyle=3D"padding: 0.625em;"><pre class=3D"language-rust hljs prettyprinted" =
style=3D"box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;L=
iberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 16.2px=
; margin-top: 0px; margin-bottom: 2rem; overflow: auto; color: rgb(77, 77, =
76); max-height: 500px; padding: 0.5em; background: rgb(237, 237, 237) !imp=
ortant;"><span class=3D"com" style=3D"box-sizing: inherit; color: rgb(136, =
0, 0);">#[tokio::main]</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 1=
36);">async</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);"> fn main</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    pretty_env_logger</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">init</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">();</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"Peer Id: {}"</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">PEER_ID=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">response_sender</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> mut response_=
rcv</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">unbounded_channel</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>();</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">init_sender</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> mut init_rcv</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> mpsc</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);">unbounded_channel</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">();</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> auth_keys </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" styl=
e=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Keypair</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::::</sp=
an><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);=
">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">into_authentic</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">KEYS=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D"box=
-sizing: inherit; color: rgb(0, 136, 0);">"can create auth keys"</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> transp </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">TokioTcpConfig</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::=
</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 1=
36);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">upgrade</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">upgrade</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span clas=
s=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Version</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">::</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);">V1</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">authenticate</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"typ" style=
=3D"box-sizing: inherit; color: rgb(102, 0, 102);">NoiseConfig</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>xx</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);">auth_keys</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">into_authenticated</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">())</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">multiplex</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">mplex</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span clas=
s=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">MplexConf=
ig</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">())</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">boxed</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">();</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> behaviour </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">AppBehavio=
ur</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">::</span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">new</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"box-sizin=
g: inherit; color: rgb(102, 0, 102);">App</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"=
kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> response_sender</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);"> init_sender</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">clone</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()).</=
span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136=
);">await</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">;</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut swarm </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" styl=
e=3D"box-sizing: inherit; color: rgb(102, 0, 102);">SwarmBuilder</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::<=
/span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 13=
6);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">transp</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> behaviour</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">*</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
">p2p</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">PEER_ID</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">executor</span><span class=3D"pun" style=3D"box-sizing=
: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"b=
ox-sizing: inherit; color: rgb(102, 0, 102);">Box</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cla=
ss=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">new</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>(|</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">fut</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">|</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">
            spawn</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">fut</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}))</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">build</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">();</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">

    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut stdin </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" styl=
e=3D"box-sizing: inherit; color: rgb(102, 0, 102);">BufReader</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</sp=
an><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);=
">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">stdin</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">()).</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">lines</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">();</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102=
, 0, 102);">Swarm</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">listen_on</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">&amp;</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">mut swarm</span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb=
(0, 136, 0);">"/ip4/0.0.0.0/tcp/0"</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">parse</span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D=
"box-sizing: inherit; color: rgb(0, 136, 0);">"can get a local socket"</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">),</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizing: inhe=
rit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D"box-siz=
ing: inherit; color: rgb(0, 136, 0);">"swarm can be started"</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">

    spawn</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">(</span><span class=3D"kwd" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 136);">async</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> move </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        sleep</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">(</span><span class=3D"typ" style=3D"box-sizing: inher=
it; color: rgb(102, 0, 102);">Duration</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">from_secs</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</spa=
n><span class=3D"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102)=
;">1</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">)).</span><span class=3D"kwd" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 136);">await</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">;</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">
        info</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inher=
it; color: rgb(0, 136, 0);">"sending init event"</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span clas=
s=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        init_sender</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">send</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"kwd" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 136);">true</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">).</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expe=
ct</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inherit; color: =
rgb(0, 136, 0);">"can send init event"</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">});</span></pre></td><td style=3D"padding: 0.625em;"><pre class=
=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-fa=
mily: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier N=
ew&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2re=
m; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5e=
m; background: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">    loop </span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> evt </span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"kwd" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 136);">select</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">!</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                line </span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> stdin</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">next_line</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizing: in=
herit; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span=
 class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Even=
tType</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing: inherit; col=
or: rgb(102, 0, 102);">Input</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">line</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</=
span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0=
);">"can get line"</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"can read line from st=
din"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">))),</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">
                response </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> response_rcv</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">recv</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">()</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"typ" style=3D"box-sizing: inherit=
; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cl=
ass=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">EventTy=
pe</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">::</span><span class=3D"typ" style=3D"box-sizing: inherit; color:=
 rgb(102, 0, 102);">LocalChainResponse</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">response</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">exp=
ect</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102,=
 102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inherit; color:=
 rgb(0, 136, 0);">"response exists"</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">)))</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
                _init </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> init_rcv</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">recv</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"typ" style=3D"box-sizing: inherit=
; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span cl=
ass=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">EventTy=
pe</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">::</span><span class=3D"typ" style=3D"box-sizing: inherit; color:=
 rgb(102, 0, 102);">Init</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
                </span><span class=3D"kwd" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 136);">event</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> swarm</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">select_ne=
xt_some</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    info</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-s=
izing: inherit; color: rgb(0, 136, 0);">"Unhandled Swarm Event: {:?}"</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">event</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">None</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">};</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">

        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-=
sizing: inherit; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=
=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">event</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);"> evt </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
            match </span><span class=3D"kwd" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 136);">event</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-s=
izing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                p2p</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing=
: inherit; color: rgb(102, 0, 102);">EventType</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Init</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> <=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">=3D&gt;</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> peers </span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pl=
n" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">ge=
t_list_peers</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    swarm</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">behaviour_mut</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">().</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">app</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">genesis</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">();</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">

                    info</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-s=
izing: inherit; color: rgb(0, 136, 0);">"connected nodes: {}"</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> =
peers</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; colo=
r: rgb(0, 0, 0);">len</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">());</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">!</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">peers</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">is_empty</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);">
                        </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> req </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</s=
pan><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 10=
2);">LocalChainRequest</span><span class=3D"pln" style=3D"box-sizing: inher=
it; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);">
                            from_peer_id</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> peers
                                </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">iter</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                                </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"kwd" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 136);">last</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                                </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span =
class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"at lea=
st one peer"</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
                                </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_string</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">};</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">

                        </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);"> json </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">::</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">to_string</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">req</span><span class=3D"pun" style=3D"b=
ox-sizing: inherit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><=
span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"c=
an jsonify request"</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                        swarm
                            </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">behaviour_mut</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><spa=
n class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                            </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">floodsub
                            </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">publish</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">CHAIN_TOPIC</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> json</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">as_bytes</=
span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102,=
 0);">());</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
                    </span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
                p2p</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing=
: inherit; color: rgb(102, 0, 102);">EventType</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">LocalChain=
Response</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">resp</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span cla=
ss=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span>=
<span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"kwd" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);"> json </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">to_string</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">resp</span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expect</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><s=
pan class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"ca=
n jsonify response"</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">
                    swarm
                        </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">behaviour_mut</span><span class=3D"pun=
" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span cl=
ass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                        </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">floodsub
                        </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">publish</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p2p</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">C=
HAIN_TOPIC</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);">clone</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">(),</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> json</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">as_bytes</span=
><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);=
">());</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0=
, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">
                p2p</span><span class=3D"pun" style=3D"box-sizing: inherit;=
 color: rgb(102, 102, 0);">::</span><span class=3D"typ" style=3D"box-sizing=
: inherit; color: rgb(102, 0, 102);">EventType</span><span class=3D"pun" st=
yle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Input</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">line</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> match line</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">as_s=
tr</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">()</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
                    </span><span class=3D"str" style=3D"box-sizing: inherit=
; color: rgb(0, 136, 0);">"ls p"</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">h=
andle_print_peers</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">),</span><span class=3D"pln=
" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
                    cmd </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> cmd</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">starts_with</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</=
span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0=
);">"ls c"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit;=
 color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">handle_print_c=
hain</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">),</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">
                    cmd </span><span class=3D"kwd" style=3D"box-sizing: inh=
erit; color: rgb(0, 0, 136);">if</span><span class=3D"pln" style=3D"box-siz=
ing: inherit; color: rgb(0, 0, 0);"> cmd</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">starts_with</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</=
span><span class=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0=
);">"create b"</span><span class=3D"pun" style=3D"box-sizing: inherit; colo=
r: rgb(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> p2p</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">handle_cre=
ate_block</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">cmd</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">&amp;</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">mut swarm</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">),=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);">
                    _ </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">=3D&gt;</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> error</span><span class=3D"pun" s=
tyle=3D"box-sizing: inherit; color: rgb(102, 102, 0);">!(</span><span class=
=3D"str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"unknown com=
mand"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">),</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
                </span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">},</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span></pre></td><td style=3D"padding: 0.625em;"><pre class=
=3D"language-rust hljs prettyprinted" style=3D"box-sizing: inherit; font-fa=
mily: Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier N=
ew&quot;, monospace; font-size: 16.2px; margin-top: 0px; margin-bottom: 2re=
m; overflow: auto; color: rgb(77, 77, 76); max-height: 500px; padding: 0.5e=
m; background: rgb(237, 237, 237) !important;"><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">pub fn get_list_peers</span><sp=
an class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(<=
/span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0)=
;">swarm</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">&amp;</span><span class=3D"typ" style=3D"box-=
sizing: inherit; color: rgb(102, 0, 102);">Swarm</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span =
class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">-&gt;=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> </span><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(10=
2, 0, 102);">Vec</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">
    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"Discovered Peers:"</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> nodes </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);"> swarm</span><span class=3D"pun" sty=
le=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">behaviour</span><=
span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">=
().</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0=
, 0);">mdns</span><span class=3D"pun" style=3D"box-sizing: inherit; color: =
rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit=
; color: rgb(0, 0, 0);">discovered_nodes</span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">();</span><span class=3D"pl=
n" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> mut unique_peers </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"ty=
p" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">HashSet</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:=
:</span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, =
136);">new</span><span class=3D"pun" style=3D"box-sizing: inherit; color: r=
gb(102, 102, 0);">();</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">for</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> peer </span><span class=3D"kwd" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 136);">in</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);"> nodes </span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">{</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        unique_peers</span><span class=3D"pun" style=3D"box-sizing: inherit=
; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">insert</span><span class=3D"pun" style=3D"=
box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">peer</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
    unique_peers</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">iter</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">().</span><span class=3D"pln" styl=
e=3D"box-sizing: inherit; color: rgb(0, 0, 0);">map</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(|</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p</span><s=
pan class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">|=
</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0=
);"> p</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(1=
02, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">to_string</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">()).</span><span class=3D"pln" style=3D=
"box-sizing: inherit; color: rgb(0, 0, 0);">collect</span><span class=3D"pu=
n" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">()</span><span c=
lass=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

pub fn handle_print_peers</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&amp;</spa=
n><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102)=
;">Swarm</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> peers </span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);"> get_list_peers</span><span class=3D=
"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">swarm</s=
pan><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, =
0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(=
0, 0, 0);">
    peers</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">iter</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">().</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);">for_each</span><span class=3D"pun"=
 style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(|</span><span cla=
ss=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">p</span><spa=
n class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">|</=
span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);=
"> info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; c=
olor: rgb(0, 136, 0);">"{}"</span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"box=
-sizing: inherit; color: rgb(0, 0, 0);"> p</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">));</span><span class=3D=
"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

pub fn handle_print_chain</span><span class=3D"pun" style=3D"box-sizing: in=
herit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">swarm</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&amp;</spa=
n><span class=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102)=
;">Swarm</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">)</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inher=
it; color: rgb(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizi=
ng: inherit; color: rgb(0, 0, 0);">
    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"Local Blockchain:"</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"=
pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);"> pretty_json </span><span class=3D"pun" style=3D"box-sizin=
g: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        serde_json</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">::</span><span class=3D"pln" style=3D"box-sizing:=
 inherit; color: rgb(0, 0, 0);">to_string_pretty</span><span class=3D"pun" =
style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(&amp;</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">swarm</sp=
an><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0=
);">.</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0,=
 0, 0);">behaviour</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">().</span><span class=3D"pln" style=3D"box-sizing=
: inherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" style=3D"box=
-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" sty=
le=3D"box-sizing: inherit; color: rgb(0, 0, 0);">blocks</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">).</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">expe=
ct</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">(</span><span class=3D"str" style=3D"box-sizing: inherit; color: =
rgb(0, 136, 0);">"can jsonify blocks"</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">);</span><span class=3D"pln" s=
tyle=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    info</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inherit; =
color: rgb(0, 136, 0);">"{}"</span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">,</span><span class=3D"pln" style=3D"bo=
x-sizing: inherit; color: rgb(0, 0, 0);"> pretty_json</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rg=
b(0, 0, 0);">

pub fn handle_create_block</span><span class=3D"pun" style=3D"box-sizing: i=
nherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=3D"box-=
sizing: inherit; color: rgb(0, 0, 0);">cmd</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">:</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">&amp;</spa=
n><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">s=
tr</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, =
102, 0);">,</span><span class=3D"pln" style=3D"box-sizing: inherit; color: =
rgb(0, 0, 0);"> swarm</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">:</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">&amp;</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">mut </span><span class=
=3D"typ" style=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Swarm</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rg=
b(102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
    </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, =
0, 136);">if</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> </span><span class=3D"kwd" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" style=3D"box-sizi=
ng: inherit; color: rgb(102, 0, 102);">Some</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">data</span><span cl=
ass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">)</span=
><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> <=
/span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102=
, 0);">=3D</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);"> cmd</span><span class=3D"pun" style=3D"box-sizing: inherit; =
color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: =
inherit; color: rgb(0, 0, 0);">strip_prefix</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"s=
tr" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"create b"</span>=
<span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);"=
>)</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0,=
 0);"> </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(=
102, 102, 0);">{</span><span class=3D"pln" style=3D"box-sizing: inherit; co=
lor: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> behaviour </span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> swarm</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">behaviour=
_mut</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">();</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> latest_block </span><span class=3D"pun" style=3D"box-=
sizing: inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" st=
yle=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> behaviour
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">app
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">blocks
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"kwd" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 136);">last</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">()</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" style=3D"box-sizi=
ng: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"str" style=3D=
"box-sizing: inherit; color: rgb(0, 136, 0);">"there is at least one block"=
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> block </span><span class=3D"pun" style=3D"box-sizing:=
 inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"=
box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D"typ" styl=
e=3D"box-sizing: inherit; color: rgb(102, 0, 102);">Block</span><span class=
=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><=
span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb(0, 0, 136);">ne=
w</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: r=
gb(0, 0, 0);">
            latest_block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">id </span><span class=3D"pun" style=3D=
"box-sizing: inherit; color: rgb(102, 102, 0);">+</span><span class=3D"pln"=
 style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"> </span><span class=3D=
"lit" style=3D"box-sizing: inherit; color: rgb(0, 102, 102);">1</span><span=
 class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">,</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>
            latest_block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-si=
zing: inherit; color: rgb(0, 0, 0);">hash</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"p=
ln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">clone</span><span c=
lass=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(),</s=
pan><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);"=
>
            data</span><span class=3D"pun" style=3D"box-sizing: inherit; co=
lor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: in=
herit; color: rgb(0, 0, 0);">to_owned</span><span class=3D"pun" style=3D"bo=
x-sizing: inherit; color: rgb(102, 102, 0);">(),</span><span class=3D"pln" =
style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb=
(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; =
color: rgb(0, 0, 0);">
        </span><span class=3D"kwd" style=3D"box-sizing: inherit; color: rgb=
(0, 0, 136);">let</span><span class=3D"pln" style=3D"box-sizing: inherit; c=
olor: rgb(0, 0, 0);"> json </span><span class=3D"pun" style=3D"box-sizing: =
inherit; color: rgb(102, 102, 0);">=3D</span><span class=3D"pln" style=3D"b=
ox-sizing: inherit; color: rgb(0, 0, 0);"> serde_json</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">::</span><span=
 class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">to_strin=
g</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">(&amp;</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">block</span><span class=3D"pun" style=3D"box-sizing: inh=
erit; color: rgb(102, 102, 0);">).</span><span class=3D"pln" style=3D"box-s=
izing: inherit; color: rgb(0, 0, 0);">expect</span><span class=3D"pun" styl=
e=3D"box-sizing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"=
str" style=3D"box-sizing: inherit; color: rgb(0, 136, 0);">"can jsonify req=
uest"</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(10=
2, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inherit; col=
or: rgb(0, 0, 0);">
        behaviour</span><span class=3D"pun" style=3D"box-sizing: inherit; c=
olor: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: i=
nherit; color: rgb(0, 0, 0);">app</span><span class=3D"pun" style=3D"box-si=
zing: inherit; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">blocks</span><span class=3D"=
pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">push</spa=
n><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0)=
;">(</span><span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, =
0, 0);">block</span><span class=3D"pun" style=3D"box-sizing: inherit; color=
: rgb(102, 102, 0);">);</span><span class=3D"pln" style=3D"box-sizing: inhe=
rit; color: rgb(0, 0, 0);">
        info</span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">!(</span><span class=3D"str" style=3D"box-sizing: inher=
it; color: rgb(0, 136, 0);">"broadcasting new block"</span><span class=3D"p=
un" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">);</span><span =
class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
        behaviour
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">floodsub
            </span><span class=3D"pun" style=3D"box-sizing: inherit; color:=
 rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizing: inheri=
t; color: rgb(0, 0, 0);">publish</span><span class=3D"pun" style=3D"box-siz=
ing: inherit; color: rgb(102, 102, 0);">(</span><span class=3D"pln" style=
=3D"box-sizing: inherit; color: rgb(0, 0, 0);">BLOCK_TOPIC</span><span clas=
s=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 102, 0);">.</span><=
span class=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">clon=
e</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 1=
02, 0);">(),</span><span class=3D"pln" style=3D"box-sizing: inherit; color:=
 rgb(0, 0, 0);"> json</span><span class=3D"pun" style=3D"box-sizing: inheri=
t; color: rgb(102, 102, 0);">.</span><span class=3D"pln" style=3D"box-sizin=
g: inherit; color: rgb(0, 0, 0);">as_bytes</span><span class=3D"pun" style=
=3D"box-sizing: inherit; color: rgb(102, 102, 0);">());</span><span class=
=3D"pln" style=3D"box-sizing: inherit; color: rgb(0, 0, 0);">
    </span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102=
, 102, 0);">}</span><span class=3D"pln" style=3D"box-sizing: inherit; color=
: rgb(0, 0, 0);">
</span><span class=3D"pun" style=3D"box-sizing: inherit; color: rgb(102, 10=
2, 0);">}</span></pre></td><td style=3D"padding: 0.625em;"></td></tr><tr st=
yle=3D"background-color: rgb(255, 255, 255); border: 1px solid rgb(221, 221=
, 221); padding: 0.35em; vertical-align: top;"><td style=3D"padding: 0.625e=
m;"><br></td></tr></tbody></table></div></body></html>
------MultipartBoundary--pXmkTxenWTr4SD3sO30EkBGvubMVG2VnKAch2EVFiw------
